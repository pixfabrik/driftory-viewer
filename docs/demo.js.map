{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/@dan503/load-js/index.js","src/demo/demo.ts","src/library/driftory.ts"],"names":[],"mappings":"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","file":"demo.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar alreadyCalledSources = [];\r\nvar awaitingCallbacks = {};\r\nvar addCallback = function (src, callback) {\r\n    if (awaitingCallbacks[src]) {\r\n        awaitingCallbacks[src].push(callback);\r\n    }\r\n    else {\r\n        awaitingCallbacks[src] = [callback];\r\n    }\r\n};\r\nfunction loadJS(src, callback) {\r\n    if (alreadyCalledSources.indexOf(src) < 0) {\r\n        alreadyCalledSources.push(src);\r\n        var script = document.createElement('script');\r\n        script.src = src;\r\n        script.onload = function () {\r\n            addCallback(src, callback);\r\n            for (var key in awaitingCallbacks) {\r\n                awaitingCallbacks[key].forEach(function (cb) { return cb(); });\r\n            }\r\n        };\r\n        document.head.appendChild(script);\r\n    }\r\n    else {\r\n        addCallback(src, callback);\r\n    }\r\n}\r\nexports.default = loadJS;\r\n","import Driftory from '../library/driftory';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const nextButton = document.querySelector('.next-button');\r\n  const previousButton = document.querySelector('.previous-button');\r\n  const frameInfo = document.querySelector('.frame-info');\r\n\r\n  const driftory = new Driftory({\r\n    container: document.querySelector('.driftory-viewer-container'),\r\n    prefixUrl: 'https://cdn.jsdelivr.net/npm/openseadragon@2.4/build/openseadragon/images/',\r\n    onComicLoad: () => {\r\n      console.log('loaded!');\r\n    },\r\n    onFrameChange: ({ frameIndex = 0, isLastFrame }) => {\r\n      if (frameInfo) {\r\n        let text = `Frame ${frameIndex + 1}`;\r\n        if (isLastFrame) {\r\n          text += ' (last frame!)';\r\n        }\r\n\r\n        frameInfo.textContent = text;\r\n      }\r\n    }\r\n  });\r\n\r\n  nextButton?.addEventListener('click', () => {\r\n    driftory.goToNextFrame();\r\n  });\r\n\r\n  previousButton?.addEventListener('click', () => {\r\n    driftory.goToPreviousFrame();\r\n  });\r\n\r\n  fetch('comic.json')\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        console.error(response);\r\n        throw new Error('Failed to load comic.json');\r\n      }\r\n\r\n      return response.json();\r\n    })\r\n    .then(json => {\r\n      // console.log(json);\r\n      driftory.openComic(json.comic);\r\n    })\r\n    .catch(error => console.error(error));\r\n});\r\n","import loadJs from '@dan503/load-js';\r\nimport { Comic } from '../../Comic.types';\r\nimport { OpenSeadragonType, ViewerType } from './openseadragon.types'\r\n\r\ninterface OsdRequest {\r\n  resolve: (value?: unknown) => void\r\n  reject: (reason?: any) => void\r\n}\r\n\r\nlet OpenSeadragon: OpenSeadragonType | undefined;\r\nlet osdRequest: OsdRequest | undefined;\r\n\r\ndeclare global {\r\n  interface Window {\r\n    OpenSeadragon: OpenSeadragonType\r\n  }\r\n}\r\n\r\nconst osdPromise = new Promise((resolve, reject) => {\r\n  osdRequest = { resolve, reject };\r\n});\r\n\r\ntype Frame = any\r\ntype Container = any\r\ntype OnFrameChange = (params: { frameIndex?: number, isLastFrame: boolean }) => void\r\ntype OnComicLoad = (params: {}) => void\r\n\r\ninterface DriftoryArguments {\r\n  container: any,\r\n  onFrameChange: OnFrameChange,\r\n  onComicLoad: OnComicLoad\r\n  prefixUrl: string\r\n}\r\n\r\nexport default class Driftory {\r\n  container: Container\r\n  onFrameChange: OnFrameChange\r\n  onComicLoad: OnComicLoad\r\n  frames: Array<Frame> = []\r\n  frameIndex?: number = -1\r\n  lastScrollTime: number = 0\r\n  scrollDelay: number = 2000\r\n  viewer?: ViewerType\r\n\r\n  constructor(args: DriftoryArguments) {\r\n    this.container = args.container;\r\n    this.onFrameChange = args.onFrameChange;\r\n    this.onComicLoad = args.onComicLoad;\r\n\r\n    // TODO: Make this more robust so it handles multiple viewers being created at the same time.\r\n    // Right now they would both load OSD since they would start before the other finished.\r\n    if (OpenSeadragon) {\r\n      this.initialize(args);\r\n    } else {\r\n      loadJs(\r\n        'https://cdn.jsdelivr.net/npm/openseadragon@2.4/build/openseadragon/openseadragon.min.js',\r\n        () => {\r\n          OpenSeadragon = window.OpenSeadragon;\r\n          this.initialize(args);\r\n          osdRequest?.resolve();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  initialize({ container, prefixUrl }: DriftoryArguments) {\r\n    this.viewer = OpenSeadragon && OpenSeadragon({\r\n      element: container,\r\n      prefixUrl: prefixUrl,\r\n      showNavigationControl: false,\r\n      maxZoomPixelRatio: 10,\r\n      gestureSettingsMouse: {\r\n        clickToZoom: false\r\n      }\r\n    });\r\n\r\n    if (this.viewer) {\r\n      // TODO: Maybe don't need to do this every frame.\r\n      this.viewer.addHandler('animation', () => {\r\n        const frameIndex = this.figureFrameIndex();\r\n        if (frameIndex !== -1 && frameIndex !== this.frameIndex) {\r\n          this.frameIndex = frameIndex;\r\n          if (this.onFrameChange) {\r\n            this.onFrameChange({ frameIndex, isLastFrame: frameIndex === this.getFrameCount() - 1 });\r\n          }\r\n        }\r\n      });\r\n\r\n      this.viewer.addHandler('canvas-click', (event) => {\r\n        if (!event || !event.quick || !event.position || !this.viewer) {\r\n          return;\r\n        }\r\n\r\n        const point = this.viewer.viewport.pointFromPixel(event.position);\r\n        let foundIndex = -1;\r\n        const itemCount = this.viewer.world.getItemCount();\r\n\r\n        for (let i = 0; i < itemCount; i++) {\r\n          const item = this.viewer.world.getItemAt(i);\r\n          if (item.getBounds().containsPoint(point)) {\r\n            foundIndex = i;\r\n          }\r\n        }\r\n\r\n        if (foundIndex === -1) {\r\n          const realFrameIndex = this.figureFrameIndex();\r\n          if (realFrameIndex === -1 && this.frameIndex !== undefined) {\r\n            this.goToFrame(this.frameIndex);\r\n          } else {\r\n            this.goToNextFrame();\r\n          }\r\n        } else if (foundIndex === this.frameIndex) {\r\n          this.goToNextFrame();\r\n        } else {\r\n          this.goToFrame(foundIndex);\r\n        }\r\n      });\r\n\r\n      const originalScrollHandler = this.viewer.innerTracker.scrollHandler;\r\n      this.viewer.innerTracker.scrollHandler = event => {\r\n        if (\r\n          event.originalEvent.ctrlKey ||\r\n          event.originalEvent.altKey ||\r\n          event.originalEvent.metaKey\r\n        ) {\r\n          return originalScrollHandler.call(this.viewer?.innerTracker, event);\r\n        }\r\n\r\n        const now = Date.now();\r\n        // console.log(event.scroll, now, now - this.lastScrollTime);\r\n        if (now - this.lastScrollTime < this.scrollDelay) {\r\n          // Returning false stops the browser from scrolling itself.\r\n          return false;\r\n        }\r\n\r\n        this.lastScrollTime = now;\r\n        if (event.scroll < 0) {\r\n          this.goToNextFrame();\r\n        } else {\r\n          this.goToPreviousFrame();\r\n        }\r\n\r\n        // Returning false stops the browser from scrolling itself.\r\n        return false;\r\n      };\r\n\r\n      window.addEventListener('keydown', event => {\r\n        if (event.altKey || event.shiftKey || event.ctrlKey || event.metaKey) {\r\n          return;\r\n        }\r\n\r\n        if (event.key === 'ArrowRight' || event.key === 'ArrowDown' || event.key === ' ') {\r\n          this.goToNextFrame();\r\n        } else if (event.key === 'ArrowLeft' || event.key === 'ArrowUp') {\r\n          this.goToPreviousFrame();\r\n        } else {\r\n          return;\r\n        }\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      });\r\n    }\r\n  }\r\n\r\n  openComic(comic: Comic) {\r\n    osdPromise.then(() => {\r\n      this.container.style.backgroundColor = comic.body.backgroundColor;\r\n\r\n      if (this.viewer) {\r\n        if (comic.body.frames) {\r\n          this.frames = comic.body.frames.map(frame => {\r\n            return OpenSeadragon && new OpenSeadragon.Rect(\r\n              frame.x - frame.width / 2,\r\n              frame.y - frame.height / 2,\r\n              frame.width,\r\n              frame.height\r\n            );\r\n          });\r\n        } else {\r\n          this.frames = comic.body.items.map(item => {\r\n            return OpenSeadragon && new OpenSeadragon.Rect(\r\n              item.x - item.width / 2,\r\n              item.y - item.height / 2,\r\n              item.width,\r\n              item.height\r\n            );\r\n          });\r\n        }\r\n\r\n        comic.body.items.forEach((item, i) => {\r\n          var success;\r\n\r\n          if (i === 0) {\r\n            success = () => this.goToFrame(0);\r\n          }\r\n\r\n          this.viewer?.addTiledImage({\r\n            x: item.x - item.width / 2,\r\n            y: item.y - item.height / 2,\r\n            width: item.width,\r\n            success: success,\r\n            tileSource: {\r\n              type: 'legacy-image-pyramid',\r\n              levels: [\r\n                {\r\n                  url: item.url,\r\n                  width: item.width,\r\n                  height: item.height\r\n                }\r\n              ]\r\n            }\r\n          });\r\n        });\r\n\r\n        if (this.onComicLoad) {\r\n          this.onComicLoad({});\r\n        }\r\n\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  goToFrame(index: number) {\r\n    var frame = this.frames[index];\r\n    var bufferFactor = 0.2;\r\n    var box = frame.clone();\r\n\r\n    box.width *= 1 + bufferFactor;\r\n    box.height *= 1 + bufferFactor;\r\n    box.x -= frame.width * bufferFactor * 0.5;\r\n    box.y -= frame.height * bufferFactor * 0.5;\r\n\r\n    this.viewer?.viewport.fitBounds(box);\r\n  }\r\n\r\n  getFrameIndex() {\r\n    return this.frameIndex;\r\n  }\r\n\r\n  figureFrameIndex() {\r\n    let bestIndex = -1;\r\n    let bestDistance = Infinity;\r\n    if (this.viewer) {\r\n      const viewportBounds = this.viewer.viewport.getBounds(true);\r\n      const viewportCenter = viewportBounds.getCenter();\r\n\r\n      for (let i = 0; i < this.frames.length; i++) {\r\n        const frame = this.frames[i];\r\n        if (frame.containsPoint(viewportCenter)) {\r\n          const distance = viewportCenter.squaredDistanceTo(frame.getCenter());\r\n          if (distance < bestDistance) {\r\n            bestDistance = distance;\r\n            bestIndex = i;\r\n          }\r\n        }\r\n      }\r\n\r\n      return bestIndex;\r\n    }\r\n  }\r\n\r\n  getFrameCount() {\r\n    return this.frames.length;\r\n  }\r\n\r\n  goToNextFrame() {\r\n    let index = this.getFrameIndex();\r\n    if (index !== undefined && index < this.frames.length - 1) {\r\n      this.goToFrame(index + 1);\r\n    }\r\n  }\r\n\r\n  goToPreviousFrame() {\r\n    let index = this.getFrameIndex();\r\n    if (index !== undefined && index > 0) {\r\n      this.goToFrame(index - 1);\r\n    }\r\n  }\r\n}\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}