{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/@dan503/load-js/index.js","src/demo/demo.ts","src/library/driftory.ts","src/library/openseadragon.types.ts"],"names":[],"mappings":"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","file":"demo.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar alreadyCalledSources = [];\r\nvar awaitingCallbacks = {};\r\nvar addCallback = function (src, callback) {\r\n    if (awaitingCallbacks[src]) {\r\n        awaitingCallbacks[src].push(callback);\r\n    }\r\n    else {\r\n        awaitingCallbacks[src] = [callback];\r\n    }\r\n};\r\nfunction loadJS(src, callback) {\r\n    if (alreadyCalledSources.indexOf(src) < 0) {\r\n        alreadyCalledSources.push(src);\r\n        var script = document.createElement('script');\r\n        script.src = src;\r\n        script.onload = function () {\r\n            addCallback(src, callback);\r\n            for (var key in awaitingCallbacks) {\r\n                awaitingCallbacks[key].forEach(function (cb) { return cb(); });\r\n            }\r\n        };\r\n        document.head.appendChild(script);\r\n    }\r\n    else {\r\n        addCallback(src, callback);\r\n    }\r\n}\r\nexports.default = loadJS;\r\n","import Driftory from '../library/driftory';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const container = document.querySelector('.driftory-viewer-container') as HTMLDivElement;\r\n  const startButton = document.querySelector('.start-button');\r\n  const previousButton = document.querySelector('.previous-button');\r\n  const nextButton = document.querySelector('.next-button');\r\n  const hideButton = document.querySelector('.hide-button');\r\n  const frameInfo = document.querySelector('.frame-info');\r\n\r\n  const driftory = new Driftory({\r\n    container,\r\n    prefixUrl: 'https://cdn.jsdelivr.net/npm/openseadragon@2.4/build/openseadragon/images/',\r\n    onComicLoad: () => {\r\n      console.log('loaded!');\r\n    },\r\n    onFrameChange: ({ frameIndex = 0, isLastFrame }) => {\r\n      if (frameInfo) {\r\n        let text = `Frame ${frameIndex + 1}`;\r\n        if (isLastFrame) {\r\n          text += ' (last frame!)';\r\n        }\r\n\r\n        frameInfo.textContent = text;\r\n      }\r\n    }\r\n  });\r\n\r\n  startButton?.addEventListener('click', () => {\r\n    driftory.goToFrame(0);\r\n  });\r\n\r\n  previousButton?.addEventListener('click', () => {\r\n    driftory.goToPreviousFrame();\r\n  });\r\n\r\n  nextButton?.addEventListener('click', () => {\r\n    driftory.goToNextFrame();\r\n  });\r\n\r\n  hideButton?.addEventListener('click', () => {\r\n    container.classList.toggle('hide')\r\n  })\r\n\r\n  fetch('comic.json')\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        console.error(response);\r\n        throw new Error('Failed to load comic.json');\r\n      }\r\n\r\n      return response.json();\r\n    })\r\n    .then(json => {\r\n      // console.log(json);\r\n      driftory.openComic(json);\r\n    })\r\n    .catch(error => console.error(error));\r\n});\r\n","import loadJs from '@dan503/load-js';\r\nimport { Comic } from './Comic.types';\r\nexport * from './Comic.types';\r\nexport * from './openseadragon.types';\r\nimport { OpenSeadragonType, ViewerType } from './openseadragon.types';\r\n\r\ninterface OsdRequest {\r\n  resolve: (value?: unknown) => void;\r\n  reject: (reason?: any) => void;\r\n}\r\n\r\nlet OpenSeadragon: OpenSeadragonType | undefined;\r\nlet osdRequest: OsdRequest | undefined;\r\n\r\ndeclare global {\r\n  interface Window {\r\n    OpenSeadragon: OpenSeadragonType;\r\n  }\r\n}\r\n\r\nconst osdPromise = new Promise((resolve, reject) => {\r\n  osdRequest = { resolve, reject };\r\n});\r\n\r\ntype Frame = any;\r\ntype Container = any;\r\ntype OnFrameChange = (params: { frameIndex: number; isLastFrame: boolean }) => void;\r\ntype OnComicLoad = (params: {}) => void;\r\n\r\ninterface DriftoryArguments {\r\n  container: HTMLElement;\r\n  onFrameChange?: OnFrameChange;\r\n  onComicLoad?: OnComicLoad;\r\n  prefixUrl?: string;\r\n}\r\n\r\nexport default class Driftory {\r\n  container: Container;\r\n  onFrameChange: OnFrameChange;\r\n  onComicLoad: OnComicLoad;\r\n  frames: Array<Frame> = [];\r\n  frameIndex: number = -1;\r\n  lastScrollTime: number = 0;\r\n  scrollDelay: number = 2000;\r\n  viewer?: ViewerType;\r\n\r\n  constructor(args: DriftoryArguments) {\r\n    this.container = args.container;\r\n    this.onFrameChange = args.onFrameChange || function() {};\r\n    this.onComicLoad = args.onComicLoad || function() {};\r\n\r\n    // Note: loadJs only loads the file once, even if called multiple times, and always makes sure\r\n    // all of the callbacks are called.\r\n    loadJs(\r\n      'https://cdn.jsdelivr.net/npm/openseadragon@2.4/build/openseadragon/openseadragon.min.js',\r\n      () => {\r\n        OpenSeadragon = window.OpenSeadragon;\r\n        this.initialize(args);\r\n        osdRequest?.resolve();\r\n      }\r\n    );\r\n  }\r\n\r\n  initialize({ container, prefixUrl }: DriftoryArguments) {\r\n    this.viewer =\r\n      OpenSeadragon &&\r\n      OpenSeadragon({\r\n        element: container,\r\n        prefixUrl: prefixUrl,\r\n        showNavigationControl: false,\r\n        maxZoomPixelRatio: 10,\r\n        gestureSettingsMouse: {\r\n          clickToZoom: false\r\n        }\r\n      });\r\n\r\n    if (this.viewer) {\r\n      // TODO: Maybe don't need to do this every frame.\r\n      this.viewer.addHandler('animation', () => {\r\n        const frameIndex = this.figureFrameIndex();\r\n        if (frameIndex !== -1 && frameIndex !== this.frameIndex) {\r\n          this.frameIndex = frameIndex;\r\n          if (this.onFrameChange) {\r\n            this.onFrameChange({\r\n              frameIndex,\r\n              isLastFrame: frameIndex === this.getFrameCount() - 1\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n      this.viewer.addHandler('canvas-click', event => {\r\n        if (!event || !event.quick || !event.position || !this.viewer) {\r\n          return;\r\n        }\r\n\r\n        const point = this.viewer.viewport.pointFromPixel(event.position);\r\n        let foundIndex = -1;\r\n        const itemCount = this.viewer.world.getItemCount();\r\n\r\n        for (let i = 0; i < itemCount; i++) {\r\n          const item = this.viewer.world.getItemAt(i);\r\n          if (item.getBounds().containsPoint(point)) {\r\n            foundIndex = i;\r\n          }\r\n        }\r\n\r\n        if (foundIndex === -1) {\r\n          const realFrameIndex = this.figureFrameIndex();\r\n          if (realFrameIndex === -1 && this.frameIndex !== undefined) {\r\n            this.goToFrame(this.frameIndex);\r\n          } else {\r\n            this.goToNextFrame();\r\n          }\r\n        } else if (foundIndex === this.frameIndex) {\r\n          this.goToNextFrame();\r\n        } else {\r\n          this.goToFrame(foundIndex);\r\n        }\r\n      });\r\n\r\n      const originalScrollHandler = this.viewer.innerTracker.scrollHandler;\r\n      this.viewer.innerTracker.scrollHandler = event => {\r\n        if (\r\n          event.originalEvent.ctrlKey ||\r\n          event.originalEvent.altKey ||\r\n          event.originalEvent.metaKey\r\n        ) {\r\n          return originalScrollHandler.call(this.viewer?.innerTracker, event);\r\n        }\r\n\r\n        const now = Date.now();\r\n        // console.log(event.scroll, now, now - this.lastScrollTime);\r\n        if (now - this.lastScrollTime < this.scrollDelay) {\r\n          // Returning false stops the browser from scrolling itself.\r\n          return false;\r\n        }\r\n\r\n        this.lastScrollTime = now;\r\n        if (event.scroll < 0) {\r\n          this.goToNextFrame();\r\n        } else {\r\n          this.goToPreviousFrame();\r\n        }\r\n\r\n        // Returning false stops the browser from scrolling itself.\r\n        return false;\r\n      };\r\n\r\n      window.addEventListener('keydown', event => {\r\n        if (event.altKey || event.shiftKey || event.ctrlKey || event.metaKey) {\r\n          return;\r\n        }\r\n\r\n        if (event.key === 'ArrowRight' || event.key === 'ArrowDown' || event.key === ' ') {\r\n          this.goToNextFrame();\r\n        } else if (event.key === 'ArrowLeft' || event.key === 'ArrowUp') {\r\n          this.goToPreviousFrame();\r\n        } else {\r\n          return;\r\n        }\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      });\r\n    }\r\n  }\r\n\r\n  openComic(unsafeComic: Comic | string) {\r\n    const { comic } =\r\n      typeof unsafeComic === 'string' ? (JSON.parse(unsafeComic) as Comic) : unsafeComic;\r\n\r\n    osdPromise.then(() => {\r\n      this.container.style.backgroundColor = comic.body.backgroundColor;\r\n\r\n      if (this.viewer) {\r\n        if (comic.body.frames) {\r\n          this.frames = comic.body.frames.map(frame => {\r\n            return (\r\n              OpenSeadragon &&\r\n              new OpenSeadragon.Rect(\r\n                frame.x - frame.width / 2,\r\n                frame.y - frame.height / 2,\r\n                frame.width,\r\n                frame.height\r\n              )\r\n            );\r\n          });\r\n        } else {\r\n          this.frames = comic.body.items.map(item => {\r\n            return (\r\n              OpenSeadragon &&\r\n              new OpenSeadragon.Rect(\r\n                item.x - item.width / 2,\r\n                item.y - item.height / 2,\r\n                item.width,\r\n                item.height\r\n              )\r\n            );\r\n          });\r\n        }\r\n\r\n        comic.body.items.forEach((item, i) => {\r\n          var success;\r\n\r\n          if (i === 0) {\r\n            success = () => this.goToFrame(0);\r\n          }\r\n\r\n          this.viewer?.addTiledImage({\r\n            x: item.x - item.width / 2,\r\n            y: item.y - item.height / 2,\r\n            width: item.width,\r\n            success: success,\r\n            tileSource: {\r\n              type: 'legacy-image-pyramid',\r\n              levels: [\r\n                {\r\n                  url: item.url,\r\n                  width: item.width,\r\n                  height: item.height\r\n                }\r\n              ]\r\n            }\r\n          });\r\n        });\r\n\r\n        if (this.onComicLoad) {\r\n          this.onComicLoad({});\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  goToFrame(index: number) {\r\n    if (this.getFrameIndex() !== index) {\r\n      var frame = this.frames[index];\r\n      var bufferFactor = 0.2;\r\n      if (frame) {\r\n        var box = frame.clone();\r\n\r\n        box.width *= 1 + bufferFactor;\r\n        box.height *= 1 + bufferFactor;\r\n        box.x -= frame.width * bufferFactor * 0.5;\r\n        box.y -= frame.height * bufferFactor * 0.5;\r\n\r\n        this.viewer?.viewport.fitBounds(box);\r\n      }\r\n    }\r\n  }\r\n\r\n  getFrameIndex() {\r\n    return this.frameIndex;\r\n  }\r\n\r\n  figureFrameIndex() {\r\n    let bestIndex = -1;\r\n    let bestDistance = Infinity;\r\n    if (this.viewer) {\r\n      const viewportBounds = this.viewer.viewport.getBounds(true);\r\n      const viewportCenter = viewportBounds.getCenter();\r\n\r\n      for (let i = 0; i < this.frames.length; i++) {\r\n        const frame = this.frames[i];\r\n        if (frame.containsPoint(viewportCenter)) {\r\n          const distance = viewportCenter.squaredDistanceTo(frame.getCenter());\r\n          if (distance < bestDistance) {\r\n            bestDistance = distance;\r\n            bestIndex = i;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return bestIndex;\r\n  }\r\n\r\n  getFrameCount() {\r\n    return this.frames.length;\r\n  }\r\n\r\n  goToNextFrame() {\r\n    let index = this.getFrameIndex();\r\n    if (index < this.frames.length - 1) {\r\n      this.goToFrame(index + 1);\r\n    }\r\n  }\r\n\r\n  goToPreviousFrame() {\r\n    let index = this.getFrameIndex();\r\n    if (index > 0) {\r\n      this.goToFrame(index - 1);\r\n    }\r\n  }\r\n}\r\n","// Type definitions is a manual copy of @types/openseadragon\r\n\r\n// Type definitions for OpenSeadragon 2.4\r\n// Project: https://openseadragon.github.io/\r\n// Definitions by:  Álvaro Martínez <https://github.com/alvaromartmart>\r\n//                  RobertYost <https://github.com/RobertYost>\r\n//                  Jasper Staab <https://github.com/jstaab>\r\n//                  Kristin Ruben <https://github.com/kristinruben>\r\n//                  Geoff Harper <https://github.com/geoff-harper>\r\n//                  Justin <https://github.com/justincy>\r\n//                  Peter Blazejewicz <https://github.com/peterblazejewicz>\r\n// Definitions: https://github.com/alvaromartmart/types-openseadragon\r\n// TypeScript Version: 3.1\r\ndeclare namespace OpenSeadragon {\r\n  class Browser {\r\n    vendor: BROWSERS;\r\n    version: number;\r\n    alpha: boolean;\r\n  }\r\n\r\n  enum BROWSERS {\r\n    UNKNOWN = 0,\r\n    IE = 1,\r\n    FIREFOX = 2,\r\n    SAFARI = 3,\r\n    CHROME = 4,\r\n    OPERA = 5\r\n  }\r\n\r\n  enum ButtonState {\r\n    REST,\r\n    GROUP,\r\n    HOVER,\r\n    DOWN\r\n  }\r\n\r\n  enum ControlAnchor {\r\n    NONE,\r\n    TOP_LEFT,\r\n    TOP_RIGHT,\r\n    BOTTOM_LEFT,\r\n    BOTTOM_RIGHT,\r\n    ABSOLUTE\r\n  }\r\n\r\n  const DEFAULT_SETTINGS: Options;\r\n\r\n  const fullScreenApi: {\r\n    supportsFullScreen: boolean;\r\n    isFullScreen: () => boolean;\r\n    getFullScreenElement: () => HTMLElement;\r\n    requestFullScreen: () => void;\r\n    exitFullScreen: () => void;\r\n    cancelFullScreen: () => void;\r\n    fullScreenEventName: string;\r\n    fullScreenErrorEventName: string;\r\n  };\r\n\r\n  enum OverlayPlacement {\r\n    CENTER,\r\n    TOP_LEFT,\r\n    TOP,\r\n    TOP_RIGHT,\r\n    RIGHT,\r\n    BOTTOM_RIGHT,\r\n    BOTTOM,\r\n    BOTTOM_LEFT,\r\n    LEFT\r\n  }\r\n\r\n  enum OverlayRotationMode {\r\n    NO_ROTATION,\r\n    EXACT,\r\n    BOUNDING_BOX\r\n  }\r\n\r\n  let pixelDensityRatio: number;\r\n\r\n  enum Placement {\r\n    CENTER,\r\n    TOP_LEFT,\r\n    TOP,\r\n    TOP_RIGHT,\r\n    RIGHT,\r\n    BOTTOM_RIGHT,\r\n    BOTTOM,\r\n    BOTTOM_LEFT,\r\n    LEFT\r\n  }\r\n\r\n  let supportsCanvas: boolean;\r\n\r\n  let version: {\r\n    versionStr: string;\r\n    major: number;\r\n    minor: number;\r\n    revision: number;\r\n  };\r\n\r\n  function addClass(element: Element | string, className: string): void;\r\n\r\n  function addEvent(\r\n    element: Element | string,\r\n    eventName: string,\r\n    handler: (event: Event) => void,\r\n    useCapture?: boolean\r\n  ): void;\r\n\r\n  function cancelEvent(event?: OSDEvent<any>): void;\r\n\r\n  function capitalizeFirstLetter(value: string): string;\r\n\r\n  function createCallback(\r\n    object: object,\r\n    method: (...args: any[]) => void,\r\n    ...args: any[]\r\n  ): (...args: any[]) => void;\r\n\r\n  function delegate(\r\n    object: object,\r\n    method: (...args: any[]) => void\r\n  ): (object: any, ...args: any[]) => void; // REVIEW: unsure of return type\r\n\r\n  function extend(): any;\r\n\r\n  function getCssPropertyWithVendorPrefix(property: string): string;\r\n\r\n  function getElement(element: string | Element): Element;\r\n\r\n  function getElementOffset(element: Element | string): Point;\r\n\r\n  function getElementPosition(element: Element | string): Point;\r\n\r\n  function getElementSize(element: Element | string): Point;\r\n\r\n  function getElementStyle(element: Element | string): any; // CSSStyle?\r\n\r\n  function getMousePosition(event?: OSDEvent<any>): Point;\r\n\r\n  function getPageScroll(): Point;\r\n\r\n  function getString(property: string): string;\r\n\r\n  function getUrlParameter(key: string): string;\r\n\r\n  function getWindowSize(): Point;\r\n\r\n  function imageFormatSupported(extension?: string): boolean;\r\n\r\n  function indexOf(array: any[], searchElement: object, fromIndex?: number): number;\r\n\r\n  // (missing jquery functions)\r\n\r\n  function makeAjaxRequest(options: {\r\n    url: string;\r\n    success: (obj: object) => void;\r\n    error: (obj: object) => void;\r\n    headers: object;\r\n    responseType: string;\r\n    withCredentials?: boolean;\r\n  }): XMLHttpRequest;\r\n\r\n  function makeCenteredNode(element: Element | string): Element;\r\n\r\n  function makeNeutralElement(tagName: string): Element;\r\n\r\n  function makeTransparentImage(src: string): Element;\r\n\r\n  function now(): number;\r\n\r\n  function parseJSON(string: string): object;\r\n\r\n  function parseXml(string: string): Document;\r\n\r\n  function pointInElement(element: Element | string, point: Point): boolean;\r\n\r\n  function positiveModulo(number: number, modulo: number): number;\r\n\r\n  function removeClass(element: Element | string, className: string): void;\r\n\r\n  function removeEvent(\r\n    element: Element | string,\r\n    eventName: string,\r\n    handler: EventHandler<any>,\r\n    useCapture?: boolean\r\n  ): void;\r\n\r\n  function setElementOpacity(element: Element | string, opacity: number, usesAlpha?: boolean): void;\r\n\r\n  function setElementTouchActionNone(element: Element | string): void;\r\n\r\n  function setPageScroll(point: Point): void;\r\n\r\n  function setString(property: string, value: any): void;\r\n\r\n  function stopEvent(event?: OSDEvent<any>): void;\r\n\r\n  interface GestureSettings {\r\n    scrollToZoom?: boolean;\r\n    clickToZoom?: boolean;\r\n    dblClickToZoom?: boolean;\r\n    pinchToZoom?: boolean;\r\n    flickEnabled?: boolean;\r\n    flickMinSpeed?: number;\r\n    flickMomentum?: number;\r\n  }\r\n\r\n  interface NavImagesValues {\r\n    REST: string;\r\n    GROUP: string;\r\n    HOVER: string;\r\n    DOWN: string;\r\n  }\r\n  interface NavImages {\r\n    zoomIn: NavImagesValues;\r\n    zoomOut: NavImagesValues;\r\n    home: NavImagesValues;\r\n    fullpage: NavImagesValues;\r\n    rotateleft: NavImagesValues;\r\n    rotateright: NavImagesValues;\r\n    flip: NavImagesValues;\r\n    previous: NavImagesValues;\r\n    next: NavImagesValues;\r\n  }\r\n\r\n  interface Options {\r\n    id?: string;\r\n    element?: HTMLElement;\r\n    tileSources?:\r\n      | string\r\n      | string[]\r\n      | TileSource[]\r\n      | TileSourceOptions\r\n      | {\r\n          type: string;\r\n          levels: Array<{\r\n            url: string;\r\n            height: number;\r\n            width: number;\r\n          }>;\r\n        }\r\n      | {\r\n          Image: {\r\n            xmlns?: string;\r\n            Url: string;\r\n            Format: string;\r\n            Overlap: string;\r\n            TileSize: string;\r\n            Size: {\r\n              Width: string;\r\n              Height: string;\r\n            };\r\n          };\r\n        };\r\n    tabIndex?: number;\r\n    overlays?: any[];\r\n    prefixUrl?: string;\r\n    navImages?: NavImages;\r\n    debugMode?: boolean;\r\n    debugGridColor?: string[];\r\n    blendTime?: number;\r\n    alwaysBlend?: boolean;\r\n    autoHideControls?: boolean;\r\n    immediateRender?: boolean;\r\n    defaultZoomLevel?: number;\r\n    opacity?: number;\r\n    preload?: boolean;\r\n    compositeOperation?:\r\n      | 'source-over'\r\n      | 'source-atop'\r\n      | 'source-in'\r\n      | 'source-out'\r\n      | 'destination-over'\r\n      | 'destination-atop'\r\n      | 'destination-in'\r\n      | 'destination-out'\r\n      | 'lighter'\r\n      | 'copy'\r\n      | 'xor';\r\n    placeholderFillStyle?: string | CanvasGradient | CanvasPattern;\r\n    degrees?: number;\r\n    flipped?: boolean;\r\n    minZoomLevel?: number;\r\n    maxZoomLevel?: number;\r\n    homeFillsViewer?: boolean;\r\n    panHorizontal?: boolean;\r\n    panVertical?: boolean;\r\n    constrainDuringPan?: boolean;\r\n    wrapHorizontal?: boolean;\r\n    wrapVertical?: boolean;\r\n    minZoomImageRatio?: number;\r\n    maxZoomPixelRatio?: number;\r\n    smoothTileEdgesMinZoom?: number;\r\n    iOSDevice?: boolean;\r\n    autoResize?: boolean;\r\n    preserveImageSizeOnResize?: boolean;\r\n    minScrollDeltaTime?: number;\r\n    pixelsPerWheelLine?: number;\r\n    pixelsPerArrowPress?: number;\r\n    visibilityRatio?: number;\r\n    viewportMargins?: object;\r\n    imageLoaderLimit?: number;\r\n    clickTimeThreshold?: number;\r\n    clickDistThreshold?: number;\r\n    dblClickTimeThreshold?: number;\r\n    dblClickDistThreshold?: number;\r\n    springStiffness?: number;\r\n    animationTime?: number;\r\n    gestureSettingsMouse?: GestureSettings;\r\n    gestureSettingsTouch?: GestureSettings;\r\n    gestureSettingsPen?: GestureSettings;\r\n    gestureSettingsUnknown?: GestureSettings;\r\n    zoomPerClick?: number;\r\n    zoomPerScroll?: number;\r\n    zoomPerSecond?: number;\r\n    showNavigator?: boolean;\r\n    navigatorId?: string;\r\n    navigatorPosition?: 'TOP_LEFT' | 'TOP_RIGHT' | 'BOTTOM_LEFT' | 'BOTTOM_RIGHT' | 'ABSOLUTE';\r\n    navigatorSizeRatio?: number;\r\n    navigatorMaintainSizeRatio?: boolean;\r\n    navigatorTop?: number | string;\r\n    navigatorLeft?: number | string;\r\n    navigatorHeight?: number | string;\r\n    navigatorWidth?: number | string;\r\n    navigatorAutoResize?: boolean;\r\n    navigatorAutoFade?: boolean;\r\n    navigatorRotate?: boolean;\r\n    navigatorBackground?: string;\r\n    navigatorOpacity?: number;\r\n    navigatorBorderColor?: string;\r\n    navigatorDisplayRegionColor?: string;\r\n    controlsFadeDelay?: number;\r\n    controlsFadeLength?: number;\r\n    maxImageCacheCount?: number;\r\n    timeout?: number;\r\n    useCanvas?: boolean;\r\n    minPixelRatio?: number;\r\n    mouseNavEnabled?: number;\r\n    showNavigationControl?: boolean;\r\n    navigationControlAnchor?: ControlAnchor;\r\n    showZoomControl?: boolean;\r\n    showHomeControl?: boolean;\r\n    showFullPageControl?: boolean;\r\n    showRotationControl?: boolean;\r\n    showFlipControl?: boolean;\r\n    showSequenceControl?: boolean;\r\n    sequenceControlAnchor?: ControlAnchor;\r\n    navPrevNextWrap?: boolean;\r\n    zoomInButton?: string;\r\n    zoomOutButton?: string;\r\n    homeButton?: string;\r\n    fullPageButton?: string;\r\n    rotateLeftButton?: string;\r\n    rotateRightButton?: string;\r\n    previousButton?: string;\r\n    nextButton?: string;\r\n    sequenceMode?: boolean;\r\n    /**\r\n     * If sequenceMode is true, display this page initially.\r\n     * @default 0\r\n     */\r\n    initialPage?: number;\r\n    preserveViewport?: boolean;\r\n    preserveOverlays?: boolean;\r\n    showReferenceStrip?: boolean;\r\n    referenceStripScroll?: string;\r\n    referenceStripElement?: HTMLElement;\r\n    referenceStripHeight?: number;\r\n    referenceStripWidth?: number;\r\n    referenceStripPosition?: string;\r\n    referenceStripSizeRatio?: number;\r\n    collectionMode?: boolean;\r\n    collectionRows?: number;\r\n    collectionColumns?: number;\r\n    collectionLayout?: 'horizontal' | 'vertical';\r\n    collectionTileSize?: number;\r\n    collectionTileMargin?: number;\r\n    crossOriginPolicy?: 'Anonymous' | 'use-credentials' | false;\r\n    ajaxWithCredentials?: boolean;\r\n    loadTilesWithAjax?: boolean;\r\n    ajaxHeaders?: object;\r\n    imageSmoothingEnabled?: boolean;\r\n    rotationIncrement?: number;\r\n  }\r\n\r\n  interface TileSourceOptions {\r\n    url?: string;\r\n    referenceStripThumbnailUrl?: string;\r\n    success?: (event: Event) => void;\r\n    ajaxWithCredentials?: boolean;\r\n    ajaxHeaders?: object;\r\n    width?: number;\r\n    height?: number;\r\n    tileSize?: number;\r\n    tileWidth?: number;\r\n    tileHeight?: number;\r\n    tileOverlap?: number;\r\n    minLevel?: number;\r\n    maxLevel?: number;\r\n    getTileUrl?: (l: number, x: number, y: number) => string;\r\n  }\r\n\r\n  class Button extends EventSource {\r\n    currentState: ButtonState;\r\n    element: Element;\r\n    fadeDelay: number;\r\n    fadeLength: number;\r\n    tracker: MouseTracker;\r\n\r\n    constructor(options: {\r\n      element?: Element;\r\n      tooltip?: string;\r\n      srcRest?: string;\r\n      srcGroup?: string;\r\n      srcHover?: string;\r\n      srcDown?: string;\r\n      fadeDelay?: number;\r\n      fadeLength?: number;\r\n      onPress?: EventHandler<ButtonEvent>;\r\n      onRelease?: EventHandler<ButtonEvent>;\r\n      onClick?: EventHandler<ButtonEvent>;\r\n      onEnter?: EventHandler<ButtonEvent>;\r\n      onExit?: EventHandler<ButtonEvent>;\r\n      onFocus?: EventHandler<ButtonEvent>;\r\n      onBlur?: EventHandler<ButtonEvent>;\r\n    });\r\n\r\n    addHandler(\r\n      eventName: ButtonEventName,\r\n      handler: EventHandler<ButtonEvent>,\r\n      userData?: object\r\n    ): void;\r\n    addOnceHandler(\r\n      eventName: ButtonEventName,\r\n      handler: EventHandler<ButtonEvent>,\r\n      userData?: object,\r\n      times?: number\r\n    ): void;\r\n    disable(): void;\r\n    enable(): void;\r\n    getHandler(eventName: ButtonEventName): (source: ButtonEventName, ...args: any[]) => void;\r\n    raiseEvent(eventName: ButtonEventName, eventArgs: object): void;\r\n    removeAllHandlers(eventName: ButtonEventName): void;\r\n    removeHandler(eventName: ButtonEventName, handler: EventHandler<ButtonEvent>): void;\r\n  }\r\n\r\n  class ButtonGroup {\r\n    buttons: Button[];\r\n    element: Element;\r\n    tracker: MouseTracker;\r\n\r\n    constructor(options: { buttons: Button[]; element?: Element });\r\n  }\r\n\r\n  interface TControlOptions {\r\n    anchor?: ControlAnchor;\r\n    attachToViewer?: boolean;\r\n    autoFade?: boolean;\r\n  }\r\n\r\n  class Control {\r\n    anchor: ControlAnchor;\r\n    autoFade: boolean;\r\n    container: Element;\r\n    element: Element;\r\n    wrapper: Element;\r\n\r\n    constructor(element: Element, options: TControlOptions, container: Element);\r\n\r\n    destroy(): void;\r\n    isVisible(): boolean;\r\n    setOpacity(opacity: number): void;\r\n    setVisible(visible: boolean): void;\r\n  }\r\n\r\n  class ControlDock {\r\n    constructor(options: object);\r\n\r\n    addControl(element: Control, controlOptions: TControlOptions): void;\r\n    areControlsEnabled(): boolean;\r\n    clearControls(): ControlDock;\r\n    removeControl(element: Control): ControlDock;\r\n    setControlsEnabled(enabled: boolean): ControlDock;\r\n  }\r\n\r\n  class DisplayRect extends Rect {\r\n    maxLevel: number;\r\n    minLevel: number;\r\n\r\n    constructor(\r\n      x: number,\r\n      y: number,\r\n      width: number,\r\n      height: number,\r\n      minLevel: number,\r\n      maxLevel: number\r\n    );\r\n  }\r\n\r\n  class Drawer {\r\n    canvas: HTMLCanvasElement | HTMLElement;\r\n    container: Element;\r\n    context: CanvasRenderingContext2D | null;\r\n    // element : Element; // Deprecated\r\n\r\n    constructor(options: {\r\n      viewer: Viewer;\r\n      viewport: Viewport;\r\n      element: Element;\r\n      debugGridColor?: string;\r\n    });\r\n\r\n    blendSketch(options: {\r\n      opacity: number;\r\n      scale?: number;\r\n      translate?: Point;\r\n      compositeOperation?: string;\r\n      bounds?: Rect;\r\n    }): void;\r\n    canRotate(): boolean;\r\n    clear(): void;\r\n    destroy(): void;\r\n    drawTile(\r\n      tile: Tile,\r\n      drawingHandler: (context: CanvasRenderingContext2D, tile: any, rendered: any) => void, // TODO: determine handler parameter types\r\n      useSketch: boolean,\r\n      scale?: number,\r\n      translate?: Point\r\n    ): void;\r\n    getCanvasSize(sketch: boolean): Point;\r\n    getOpacity(): number;\r\n    setOpacity(opacity: number): Drawer;\r\n    viewportToDrawerRectangle(rectangle: Rect): Rect;\r\n    setImageSmoothingEnabled(imageSmoothingEnabled?: boolean): void;\r\n    viewportCoordToDrawerCoord(point: Point): Point;\r\n    clipWithPolygons(polygons: Point[][], useSketch?: boolean): void;\r\n  }\r\n\r\n  class DziTileSource extends TileSource {\r\n    constructor(\r\n      width: number,\r\n      height: number,\r\n      tileSize: number,\r\n      tileOverlap: number,\r\n      tilesUrl: number,\r\n      fileFormat: number,\r\n      displayRects: number,\r\n      minLevel: number,\r\n      maxLevel: number\r\n    );\r\n  }\r\n\r\n  class IIIFTileSource extends TileSource {\r\n    constructor(options: TileSourceOptions & { tileFormat?: string });\r\n  }\r\n\r\n  class ImageLoader {\r\n    constructor(options: { jobLimit?: number; timeout?: number });\r\n\r\n    addJob(options: {\r\n      src?: string;\r\n      loadWithAjax?: string;\r\n      ajaxHeaders?: string;\r\n      crossOriginPolicy?: string | boolean;\r\n      ajaxWithCredentials?: boolean;\r\n      callback?: () => void;\r\n      abort?: () => void;\r\n    }): void;\r\n    clear(): void;\r\n  }\r\n\r\n  class ImageTileSource extends TileSource {\r\n    constructor(options: {\r\n      url: string;\r\n      buildPyramid?: boolean;\r\n      crossOriginPolicy?: string | boolean;\r\n      ajaxWithCredentials?: string | boolean;\r\n      useCanvas?: boolean;\r\n    });\r\n  }\r\n\r\n  class LegacyTileSource extends TileSource {\r\n    constructor(\r\n      levels?: Array<{\r\n        url: string;\r\n        width: number;\r\n        height: number;\r\n      }>\r\n    );\r\n  }\r\n\r\n  interface MouseTrackerOptions {\r\n    element: Element | string;\r\n    startDisabled?: boolean;\r\n    clickTimeThreshold?: number;\r\n    clickDistThreshold?: number;\r\n    dblClickTimeThreshold?: number;\r\n    dblClickDistThreshold?: number;\r\n    stopDelay?: number;\r\n    enterHandler?: EventHandler<OSDEvent<any>>;\r\n    exitHandler?: EventHandler<OSDEvent<any>>;\r\n    pressHandler?: EventHandler<OSDEvent<any>>;\r\n    nonPrimaryPressHandler?: EventHandler<OSDEvent<any>>;\r\n    releaseHandler?: EventHandler<OSDEvent<any>>;\r\n    nonPrimaryReleaseHandler?: EventHandler<OSDEvent<any>>;\r\n    moveHandler?: EventHandler<OSDEvent<any>>;\r\n    scrollHandler?: EventHandler<OSDEvent<any>>;\r\n    clickHandler?: EventHandler<OSDEvent<any>>;\r\n    dblClickHandler?: EventHandler<OSDEvent<any>>;\r\n    dragHandler?: EventHandler<OSDEvent<any>>;\r\n    dragEndHandler?: EventHandler<OSDEvent<any>>;\r\n    pinchHandler?: EventHandler<OSDEvent<any>>;\r\n    keyDownHandler?: EventHandler<OSDEvent<any>>;\r\n    keyUpHandler?: EventHandler<OSDEvent<any>>;\r\n    keyHandler?: EventHandler<OSDEvent<any>>;\r\n    focusHandler?: EventHandler<OSDEvent<any>>;\r\n    blurHandler?: EventHandler<OSDEvent<any>>;\r\n    userData?: object;\r\n  }\r\n  class MouseTracker {\r\n    clickTimeThreshold: number;\r\n    clickDistThreshold: number;\r\n    dblClickTimeThreshold: number;\r\n    dblClickDistThreshold: number;\r\n    element: Element;\r\n\r\n    constructor(options: MouseTrackerOptions);\r\n\r\n    blurHandler: (event: OSDEvent<any>) => void;\r\n    clickHandler: (event: OSDEvent<any>) => void;\r\n    dblClickHandler: (event: OSDEvent<any>) => void;\r\n    destroy(): void;\r\n    dragEndHandler: (event: OSDEvent<any>) => void;\r\n    dragHandler: (event: OSDEvent<any>) => void;\r\n    enterHandler: (event: OSDEvent<any>) => void;\r\n    exitHandler: (event: OSDEvent<any>) => void;\r\n    focusHandler: (event: OSDEvent<any>) => void;\r\n    getActivePointerCount(): number;\r\n    getActivePointersListByType(type: string): GesturePointList;\r\n    getActivePointersListsExceptType(type: string): GesturePointList[];\r\n    keyDownHandler: (event: OSDEvent<any>) => void;\r\n    keyHandler: (event: OSDEvent<any>) => void;\r\n    keyUpHandler: (event: OSDEvent<any>) => void;\r\n    moveHandler: (event: OSDEvent<any>) => void;\r\n    nonPrimaryPressHandler: (event: OSDEvent<any>) => void;\r\n    nonPrimaryReleaseHandler: (event: OSDEvent<any>) => void;\r\n    pinchHandler: (event: OSDEvent<any>) => void;\r\n    pressHandler: (event: OSDEvent<any>) => void;\r\n    releaseHandler: (event: OSDEvent<any>) => void;\r\n    scrollHandler: (event: OSDEvent<any>) => void;\r\n    setTracking(track: boolean): any;\r\n    stopHandler: (event: OSDEvent<any>) => void;\r\n  }\r\n\r\n  interface GesturePoint {\r\n    id: number;\r\n    type: string;\r\n    captured: boolean;\r\n    isPrimary: boolean;\r\n    insideElementPressed: boolean;\r\n    insideElement: boolean;\r\n    speed: number;\r\n    direction: number;\r\n    contactPos: Point;\r\n    contactTime: number;\r\n    lastPos: Point;\r\n    lastTime: number;\r\n    currentPos: Point;\r\n    currentTime: number;\r\n  }\r\n\r\n  class GesturePointList {\r\n    buttons: Button[];\r\n    captureCount: number;\r\n    clicks: number;\r\n    contacts: number;\r\n    type: string;\r\n\r\n    constructor(type: string);\r\n\r\n    add(gesturePoint: GesturePoint): number;\r\n    addContact(): void;\r\n    asArray(): GesturePoint[];\r\n    getById(id: number): GesturePoint | null;\r\n    getByIndex(index: number): GesturePoint | null;\r\n    getLength(): number;\r\n    getPrimary(): GesturePoint | null;\r\n    removeById(id: number): number;\r\n    removeContact(): void;\r\n  }\r\n\r\n  class Navigator extends Viewer {\r\n    setFlip(state: boolean): void;\r\n    update(viewport: Viewport): void;\r\n    updateSize(): void;\r\n    setWidth(width: number | string): void;\r\n    setHeight(width: number | string): void;\r\n  }\r\n\r\n  class OsmTileSource extends TileSource {\r\n    constructor(\r\n      width: number,\r\n      height: number,\r\n      tileSize: number,\r\n      tileOverlap: number,\r\n      tilesUrl: string\r\n    );\r\n  }\r\n\r\n  type OnDrawCallback = (position: Point, size: Point, element: HTMLElement) => void;\r\n\r\n  interface OverlayOptions {\r\n    element: HTMLElement;\r\n    location: Point | Rect;\r\n    placement?: Placement;\r\n    onDraw?: OnDrawCallback;\r\n    checkResize?: boolean;\r\n    width?: number;\r\n    height?: number;\r\n    rotationMode?: boolean;\r\n  }\r\n\r\n  class Overlay {\r\n    constructor(options: OverlayOptions);\r\n    adjust(position: Point, size: Point): void;\r\n    destroy(): void;\r\n    drawHTML(container: HTMLElement): void;\r\n    getBounds(viewport: Viewport): Rect;\r\n    update(location: Point | Rect, placement: Placement): void;\r\n  }\r\n\r\n  class Point {\r\n    x: number;\r\n    y: number;\r\n    constructor(x?: number, y?: number);\r\n    apply(func: (v: number) => number): Point;\r\n    clone(): Point;\r\n    distanceTo(point: Point): number;\r\n    divide(factor: number): Point;\r\n    equals(point: Point): boolean;\r\n    minus(point: Point): Point;\r\n    negate(): Point;\r\n    plus(point: Point): Point;\r\n    rotate(degrees: number, pivot?: Point): Point;\r\n    squaredDistanceTo(point: Point): number;\r\n    times(factor: number): Rect;\r\n    toString(): string;\r\n  }\r\n\r\n  class Rect {\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n    degrees: number;\r\n    constructor(x?: number, y?: number, width?: number, height?: number, degrees?: number);\r\n    clone(): Rect;\r\n    containsPoint(point: Point, epsilon?: number): boolean;\r\n    equals(rectangle: Rect): boolean;\r\n    getAspectRatio(): number;\r\n    getBottomLeft(): Point;\r\n    getBottomRight(): Point;\r\n    getBoundingBox(): Rect;\r\n    getCenter(): Point;\r\n    getIntegerBoundingBox(): Rect;\r\n    getSize(): Point;\r\n    getTopLeft(): Point;\r\n    getTopRight(): Point;\r\n    intersection(rect: Rect): Rect;\r\n    rotate(degrees: number, pivot?: Rect): Rect;\r\n    times(factor: number): Rect;\r\n    toString(): string;\r\n    translate(delta: Point): Rect;\r\n    union(rect: Rect): Rect;\r\n  }\r\n\r\n  class ReferenceStrip {\r\n    constructor(options: object);\r\n    setFocus(): void;\r\n    update(): void;\r\n  }\r\n\r\n  class Spring {\r\n    animationTime: number;\r\n    current: {\r\n      value: number;\r\n      time: number;\r\n    };\r\n    springStiffness: number;\r\n    start: {\r\n      value: number;\r\n      time: number;\r\n    };\r\n    constructor(options: {\r\n      springStiffness: number;\r\n      animationTime: number;\r\n      initial?: number;\r\n      exponential?: boolean;\r\n    });\r\n    isAtTargetValue(): boolean;\r\n    resetTo(target: number): void;\r\n    shiftBy(delta: number): void;\r\n    springTo(target: number): void;\r\n    update(): void;\r\n  }\r\n\r\n  class Tile {\r\n    ajaxHeaders: object;\r\n    beingDrawn: boolean;\r\n    blendStart: number;\r\n    bounds: Rect;\r\n    cacheKey: string;\r\n    context2D: CanvasRenderingContext2D;\r\n    element: Element;\r\n    exists: boolean;\r\n    image: object;\r\n    imgElement: HTMLImageElement;\r\n    isBottomMost: boolean;\r\n    isRightMost: boolean;\r\n    lastTouchTime: number;\r\n    level: number;\r\n    loaded: boolean;\r\n    loading: boolean;\r\n    loadWithAjax: boolean;\r\n    opacity: number;\r\n    position: Point;\r\n    size: Point;\r\n    sourceBounds: Rect;\r\n    style: string;\r\n    url: string;\r\n    visibility: number;\r\n    x: number;\r\n    y: number;\r\n\r\n    constructor(\r\n      level: number,\r\n      x: number,\r\n      y: number,\r\n      bounds: Rect,\r\n      exists: boolean,\r\n      url: string,\r\n      context2D: CanvasRenderingContext2D,\r\n      loadWithAjax: boolean,\r\n      ajaxHeaders: object,\r\n      sourceBounds: Rect\r\n    );\r\n    drawCanvas(\r\n      context: CanvasRenderingContext2D,\r\n      drawingHandler: (context: CanvasRenderingContext2D, tile: any, rendered: any) => void,\r\n      scale?: number,\r\n      translate?: Point\r\n    ): void;\r\n    drawHTML(container: Element): void;\r\n    getScaleForEdgeSmoothing(): number;\r\n    getTranslationForEdgeSmoothing(scale?: number): Point;\r\n    toString(): string;\r\n    unload(): void;\r\n  }\r\n\r\n  class TileCache {\r\n    constructor(options: { maxImageCacheCount?: number });\r\n    cacheTile(options: {\r\n      tile: Tile;\r\n      image: HTMLImageElement; // TODO: check type\r\n      tiledImage: TiledImage;\r\n      cutoff?: number;\r\n    }): void;\r\n    clearTilesFor(tiledImage: TiledImage): void;\r\n    numTilesLoaded(): number;\r\n  }\r\n\r\n  class TiledImage {\r\n    source: TileSource;\r\n    constructor(options: {\r\n      source: TileSource;\r\n      viewer: Viewer;\r\n      tileCache: TileCache;\r\n      drawer: Drawer;\r\n      imageLoader: ImageLoader;\r\n      x?: number;\r\n      y?: number;\r\n      width?: number;\r\n      height?: number;\r\n      fitBounds?: Rect;\r\n      fitBoundsPlacement?: Placement;\r\n      clip?: Rect;\r\n      springStiffness?: number;\r\n      animationTime?: boolean;\r\n      minZoomImageRatio?: number;\r\n      wrapHorizontal?: boolean;\r\n      wrapVertical?: boolean;\r\n      immediateRender?: boolean;\r\n      blendTime?: number;\r\n      alwaysBlend?: boolean;\r\n      minPixelRatio?: number;\r\n      smoothTileEdgesMinZoom?: number;\r\n      iOSDevice?: boolean;\r\n      opacity?: number;\r\n      preload?: boolean;\r\n      compositeOperation?: string;\r\n      debugMode?: boolean;\r\n      placeholderFillStyle?: string | CanvasGradient | CanvasPattern;\r\n      crossOriginPolicy?: string | boolean;\r\n      ajaxWithCredentials?: boolean;\r\n      loadTilesWithAjax?: boolean;\r\n      ajaxHeaders?: object;\r\n    });\r\n\r\n    addHandler(eventName: string, handler: EventHandler<TiledImageEvent>, userData?: object): void;\r\n    addOnceHandler(\r\n      eventName: string,\r\n      handler: EventHandler<TiledImageEvent>,\r\n      userData?: object\r\n    ): void;\r\n    destroy(): void;\r\n    draw(): void;\r\n    fitBounds(bounds: Rect, anchor?: Placement, immediately?: boolean): void;\r\n    getBounds(current?: boolean): Rect;\r\n    getBoundsNoRotate(current?: boolean): Rect;\r\n    getClip(): Rect | null;\r\n    getClippedBounds(current?: boolean): Rect;\r\n    getCompositeOperation(): string;\r\n    getContentSize(): Point;\r\n    getFullyLoaded(): boolean;\r\n    getHandler(eventName: string): (source: Event, ...args: any[]) => void;\r\n    getOpacity(): number;\r\n    getPreload(): boolean;\r\n    getRotation(current?: boolean): number;\r\n    imageToViewerElementCoordinats(pixel: Point): Point;\r\n    imageToViewportCoordinates(position: Point, current?: boolean): Point;\r\n    imageToViewportCoordinates(imageX: number, imageY: number, current?: boolean): Point;\r\n    imageToViewportRectangle(\r\n      imageX: number,\r\n      imageY?: number,\r\n      pixelWidth?: number,\r\n      pixelHeight?: number,\r\n      current?: boolean\r\n    ): Rect;\r\n    imageToViewportRectangle(\r\n      position: Rect,\r\n      pixelWidth?: number,\r\n      pixelHeight?: number,\r\n      current?: boolean\r\n    ): Rect;\r\n\r\n    imageToViewportZoom(imageZoom: number): number;\r\n    imageToWindowCoordinates(pixel: Point): Point;\r\n    needsDraw(): boolean;\r\n    raiseEvent(eventName: string, eventArgs: object): void;\r\n    removeAllHandlers(eventName: string): void;\r\n    removeHandler(eventName: string, handler: EventHandler<TiledImageEvent>): void;\r\n    reset(): void;\r\n    resetCroppingPolygons(): void;\r\n    setClip(newClip: Rect | null): void;\r\n    setCompositeOperation(compositeOperation: string): void;\r\n    setCroppingPolygons(polygons: Point[][]): void;\r\n    setHeight(height: number, immediately?: boolean): void;\r\n    setOpacity(opacity: number): void;\r\n    setPosition(position: Point, immediately?: boolean): void;\r\n    setPreload(preload: boolean): void;\r\n    setRotation(degrees: number, immediately?: boolean): void;\r\n    setWidth(width: number, immediately?: boolean): void;\r\n    update(): boolean;\r\n    viewerElementToImageCoordinates(pixel: Point): Point;\r\n    viewportToImageCoordinates(position: Point, current?: boolean): Point;\r\n    viewportToImageCoordinates(viewerX: number, viewerY: number, current?: boolean): Point;\r\n    viewportToImageRectangle(position: Rect): Rect;\r\n    viewportToImageRectangle(\r\n      viewportX: number,\r\n      viewportY: number,\r\n      pixelWidth?: number,\r\n      pixelHeight?: number,\r\n      current?: boolean\r\n    ): Rect;\r\n    viewportToImageZoom(viewportZoom: number): number;\r\n    windowToImageCoordinates(pixel: Point): Point;\r\n  }\r\n\r\n  class TileSource extends EventSource {\r\n    aspectRatio: number;\r\n    dimensions: Point;\r\n    maxLevel: number;\r\n    minlevel: number;\r\n    ready: boolean;\r\n    tileOverlap: number;\r\n    constructor(options: TileSourceOptions);\r\n    addHandler(eventName: string, handler: EventHandler<TileSourceEvent>, userData?: object): void;\r\n    addOnceHandler(\r\n      eventName: string,\r\n      handler: EventHandler<TileSourceEvent>,\r\n      userData?: object,\r\n      times?: number\r\n    ): void;\r\n    configure(data: string | object | any[] | Document): object;\r\n    getClosestLevel(): number;\r\n    getHandler(eventName: string): (event: Event) => void;\r\n    getImageInfo(url: string): void;\r\n    getLevelScale(level: number): number;\r\n    getNumTiles(level: number): number;\r\n    getPixelRatio(level: number): number;\r\n    getTileAjaxHeaders(level: number, x: number, y: number): object;\r\n    getTileAtPoint(level: number, point: Point): Tile;\r\n    getTileBounds(level: number, x: number, y: number, isSource?: boolean): Rect;\r\n    getTileHeight(level: number): number;\r\n    getTileUrl(level: number, x: number, y: number): string;\r\n    getTileWidth(level: number): number;\r\n    raiseEvent(eventName: string, eventArgs: object): void;\r\n    removeAllHandlers(eventName: string): void;\r\n    removeHandler(eventName: string, handler: EventHandler<TileSourceEvent>): void;\r\n    supports(data: string | object | any[] | Document, url: string): boolean;\r\n    tileExists(level: number, x: number, y: number): boolean;\r\n  }\r\n\r\n  class TmsTileSource extends TileSource {\r\n    constructor(\r\n      width: number,\r\n      height: number,\r\n      tileSize: number,\r\n      tileOverlap: number,\r\n      tilesUrl: string\r\n    );\r\n  }\r\n\r\n  interface ImageOptions {\r\n    index?: number;\r\n    replace?: boolean;\r\n    x?: number;\r\n    y?: number;\r\n    width?: number;\r\n    height?: number;\r\n    fitBounds?: Rect;\r\n    fitBoundsPlacement?: Placement;\r\n    clip?: Rect;\r\n    opacity?: number;\r\n    preload?: boolean;\r\n    degrees?: number;\r\n    compositeOperation?: string;\r\n    crossOriginPolicy?: string;\r\n    ajaxWithCredentials?: boolean;\r\n    loadTilesWithAjax?: boolean;\r\n    ajaxHeaders?: object;\r\n    success?: (event: Event) => void;\r\n    error?: (error: Error) => void;\r\n    collectionImmediately?: boolean;\r\n    placeholderFillStyle?: string | CanvasGradient | CanvasPattern;\r\n  }\r\n\r\n  interface TiledImageOptions extends ImageOptions {\r\n    tileSource: string | object;\r\n  }\r\n\r\n  interface SimpleImageOptions extends ImageOptions {\r\n    url: string;\r\n  }\r\n\r\n  class Viewer extends ControlDock {\r\n    canvas: HTMLElement;\r\n    container: HTMLElement;\r\n    drawer: Drawer;\r\n    element: HTMLElement;\r\n    initialPage: number;\r\n    navigator: Navigator;\r\n    viewport: Viewport;\r\n    world: World;\r\n    referenceStrip: ReferenceStrip;\r\n    innerTracker: {\r\n      scrollHandler: (event: { originalEvent: MouseEvent; scroll: number }) => void;\r\n    };\r\n\r\n    constructor(options: Options);\r\n    _cancelPendingImages(): void;\r\n    addHandler(\r\n      eventName: ViewerEventName,\r\n      callback: EventHandler<ViewerEvent>,\r\n      userData?: object\r\n    ): void;\r\n    addOnceHandler(\r\n      eventName: ViewerEventName,\r\n      callback: EventHandler<ViewerEvent>,\r\n      userData?: object,\r\n      times?: number\r\n    ): void;\r\n    addOverlay(\r\n      element: HTMLElement | string | object,\r\n      location?: Point | Rect,\r\n      placement?: Placement,\r\n      onDraw?: (element: HTMLElement, location: Location, placement: Placement) => void\r\n    ): Viewer;\r\n    addReferenceStrip(): void;\r\n    addSimpleImage(options: SimpleImageOptions): void;\r\n    addTiledImage(options: TiledImageOptions): void;\r\n    bindSequenceControls(): Viewer;\r\n    bindStandardControls(): Viewer;\r\n    clearOverlays(): Viewer;\r\n    close(): Viewer;\r\n    currentPage(): number;\r\n    destroy(): void;\r\n    forceRedraw(): Viewer;\r\n    gestureSettingsByDeviceType(type: string): GestureSettings;\r\n    getHandler(eventName: string): (event: Event) => void;\r\n    getOverlayById(element: Element | string): Overlay;\r\n    goToPage(page: number): Viewer;\r\n    isFullPage(): boolean;\r\n    isMouseNavEnabled(): boolean;\r\n    isOpen(): boolean;\r\n    isVisible(): boolean;\r\n    open(tileSources: string | object | TileSource[], initialPage?: number): Viewer;\r\n    raiseEvent(eventName: string, eventArgs?: object): void;\r\n    removeAllHandlers(eventName: string): void;\r\n    removeHandler(eventName: string, handler: EventHandler<ViewerEvent>): void;\r\n    removeOverlay(overlay: Element | string): Viewer;\r\n    removeReferenceStrip(): void;\r\n    setControlsEnabled(enabled: boolean): Viewer;\r\n    setDebugMode(debug: boolean): Viewer;\r\n    setFullPage(fullScreen: boolean): Viewer;\r\n    setFullScreen(fullScreen: boolean): Viewer;\r\n    setMouseNavEnabled(enabled: boolean): Viewer;\r\n    setVisible(visible: boolean): Viewer;\r\n    updateOverlay(element: Element | string, location: Point | Rect, placement?: Placement): Viewer;\r\n  }\r\n\r\n  class Viewport {\r\n    constructor(options: {\r\n      margins: object;\r\n      springStiffness?: number;\r\n      animationTime?: number;\r\n      minZoomImageRatio?: number;\r\n      maxZoomPixelRatio?: number;\r\n      visibilityRatio?: number;\r\n      wrapHorizontal?: boolean;\r\n      wrapVertical?: boolean;\r\n      defaultZoomLevel?: number;\r\n      minZoomLevel?: number;\r\n      maxZoomLevel?: number;\r\n      degrees?: number;\r\n      homeFillsViewer?: boolean;\r\n    });\r\n\r\n    applyConstraints(immediately?: boolean): Viewport;\r\n    deltaPixelsFromPoints(deltaPoints: Point, current?: boolean): Point;\r\n    deltaPixelsFromPointsNoRotate(deltaPoints: Point, current?: boolean): Point;\r\n    deltaPointsFromPixels(deltaPoints: Point, current?: boolean): Point;\r\n    deltaPointsFromPixelsNoRotate(deltaPoints: Point, current?: boolean): Point;\r\n    ensureVisible(immediately?: boolean): Viewport;\r\n    fitBounds(bounds: Rect, immediately?: boolean): Viewport;\r\n    fitBoundsWithConstraints(bounds: Rect, immediately?: boolean): Viewport;\r\n    fitHorizontally(immediately?: boolean): Viewport;\r\n    fitVertically(immediately?: boolean): Viewport;\r\n    getAspectRatio(): any; // TODO: determine return type\r\n    getBounds(current?: boolean): Rect;\r\n    getBoundsNoRotate(current?: boolean): Rect;\r\n    getBoundsNoRotateWithMargins(current?: boolean): Rect;\r\n    getBoundsWithMargins(current?: boolean): Rect;\r\n    getCenter(current?: boolean): Point;\r\n    getConstrainedBounds(current?: boolean): Viewport;\r\n    getContainerSize(): Point;\r\n    getFlip(): boolean;\r\n    getHomeBounds(): Rect;\r\n    getHomeBoundsNoRotate(): Rect;\r\n    getHomeZoom(): number;\r\n    getMargins(): object;\r\n    getMaxZoom(): number;\r\n    getMinZoom(): number;\r\n    getRotation(): number;\r\n    getZoom(current?: boolean): number;\r\n    goHome(immediately?: boolean): void;\r\n    imageToViewerElementCoordinates(pixel: Point): Point;\r\n    imageToViewportCoordinates(position: Point): Point;\r\n    imageToViewportCoordinates(imageX: number, imageY: number): Point;\r\n    imageToViewportCoordinates(\r\n      imageX: number,\r\n      imageY: number,\r\n      pixelWidth: number,\r\n      pixelHeight: number\r\n    ): Point;\r\n    imageToViewportRectangle(\r\n      imageX: number | Rect,\r\n      imageY?: number,\r\n      pixelWidth?: number,\r\n      pixelHeight?: number\r\n    ): Rect;\r\n    imageToViewportZoom(imageZoom: number): number;\r\n    imageToWindowCoordinates(pixel: Point): Point;\r\n    panBy(delta: Point, immediately?: boolean): Viewport;\r\n    panTo(center: Point, immediately?: boolean): Viewport;\r\n    pixelFromPoint(point: Point, current?: boolean): Point;\r\n    pixelFromPointNoRotate(point: Point, current?: boolean): Point;\r\n    pointFromPixel(point: Point, current?: boolean): Point;\r\n    pointFromPixelNoRotate(point: Point, current?: boolean): Point;\r\n    resetContentSize(contentSize: Point): Viewport;\r\n    resize(): Viewport;\r\n    setFlip(state: boolean): Viewport;\r\n    setMargins(margins: object): void;\r\n    setRotation(degrees: number): Viewport;\r\n    toggleFlip(): Viewport;\r\n    update(): boolean;\r\n    viewerElementToImageCoordinates(pixel: Point): Point;\r\n    viewerElementToViewportCoordinates(pixel: Point): Point;\r\n    viewerElementToViewportRectangle(rectangle: Rect): Rect;\r\n    viewportToImageCoordinates(position: Point): Point;\r\n    viewportToImageCoordinates(viewerX: number, viewerY: number): Point;\r\n    viewportToImageRectangle(rectangle: Rect): Rect;\r\n    viewportToImageRectangle(\r\n      viewerX: number,\r\n      viewerY: number,\r\n      pointWidth: number,\r\n      pointHeight: number\r\n    ): Rect;\r\n    viewportToImageZoom(viewportZoom: number): number;\r\n    viewportToViewerElementCoordinates(point: Point): Point;\r\n    viewportToViewerElementRectangle(rectangle: Rect): Rect;\r\n    viewportToWindowCoordinates(point: Point): Point;\r\n    windowToImageCoordinates(pixel: Point): Point;\r\n    windowToViewportCoordinates(pixel: Point): Point;\r\n    zoomBy(factor: number, refPoint?: Point, immediately?: boolean): Viewport;\r\n    zoomTo(factor: number, refPoint?: Point, immediately?: boolean): Viewport;\r\n  }\r\n\r\n  class World extends EventSource {\r\n    constructor(options: object);\r\n\r\n    addHandler(\r\n      eventName: WorldEventName,\r\n      callback: EventHandler<WorldEvent>,\r\n      userData?: object\r\n    ): void;\r\n    addItem(item: TiledImage, options?: { index?: number }): void;\r\n    addOnceHandler(\r\n      eventName: string,\r\n      handler: EventHandler<WorldEvent>,\r\n      userData?: object,\r\n      times?: number\r\n    ): void;\r\n    arrange(options: {\r\n      immediately?: boolean;\r\n      layout?: 'horizontal' | 'vertical';\r\n      rows?: number;\r\n      columns?: number;\r\n      tileSize?: number;\r\n      tileMargin?: number;\r\n    }): void;\r\n    draw(): void;\r\n    getContentFactor(): number;\r\n    getHandler(eventName: string): (event: Event) => void;\r\n    getHomeBounds(): Rect;\r\n    getIndexOfItem(item: TiledImage): number;\r\n    getItemAt(id: number): TiledImage;\r\n    getItemCount(): number;\r\n    needsDraw(): boolean;\r\n    raiseEvent(eventName: string, eventArgs?: object): void;\r\n    removeAll(): void;\r\n    removeAllHandlers(eventName: string): void;\r\n    removeHandler(eventName: string, handler: EventHandler<WorldEvent>): void;\r\n    removeItem(item: TiledImage): void;\r\n    resetItems(): void;\r\n    setAutoRefigureSizes(value?: boolean): void;\r\n    setItemIndex(item: TiledImage, index: number): void;\r\n    update(): void;\r\n  }\r\n\r\n  class ZoomifyTileSource extends TileSource {\r\n    constructor(width: number, height: number, tileSize: number, tilesUrl: string);\r\n  }\r\n\r\n  // TODO: use proper eventName type aliases, and OSDEvent where appropiate\r\n\r\n  type EventHandler<T extends OSDEvent<any>> = (event: T) => void;\r\n\r\n  type ButtonEventName = 'blur' | 'click' | 'enter' | 'exit' | 'focus' | 'press' | 'release';\r\n  type TiledImageEventName =\r\n    | 'bounds-change'\r\n    | 'clip-change'\r\n    | 'composite-operation-change'\r\n    | 'fully-loaded-change'\r\n    | 'opacity-change';\r\n  type TileSourceEventname = 'open-failed' | 'ready';\r\n  type ViewerEventName =\r\n    | 'add-item-failed'\r\n    | 'add-overlay'\r\n    | 'animation'\r\n    | 'animation-finish'\r\n    | 'animation-start'\r\n    | 'canvas-click'\r\n    | 'canvas-double-click'\r\n    | 'canvas-drag'\r\n    | 'canvas-drag-end'\r\n    | 'canvas-enter'\r\n    | 'canvas-exit'\r\n    | 'canvas-key'\r\n    | 'canvas-nonprimary-press'\r\n    | 'canvas-nonprimary-release'\r\n    | 'canvas-pinch'\r\n    | 'canvas-press'\r\n    | 'canvas-release'\r\n    | 'canvas-scroll'\r\n    | 'clear-overlay'\r\n    | 'close'\r\n    | 'constrain'\r\n    | 'container-enter'\r\n    | 'container-exit'\r\n    | 'controls-enabled'\r\n    | 'flip'\r\n    | 'full-page'\r\n    | 'full-screen'\r\n    | 'home'\r\n    | 'mouse-enabled'\r\n    | 'navigator-click'\r\n    | 'navigator-drag'\r\n    | 'navigator-scroll'\r\n    | 'open'\r\n    | 'open-failed'\r\n    | 'page'\r\n    | 'pan'\r\n    | 'pre-full-page'\r\n    | 'pre-full-screen'\r\n    | 'remove-overlay'\r\n    | 'reset-size'\r\n    | 'resize'\r\n    | 'rotate'\r\n    | 'tile-drawing'\r\n    | 'tile-drawn'\r\n    | 'tile-load-failed'\r\n    | 'tile-loaded'\r\n    | 'tile-unloaded'\r\n    | 'update-level'\r\n    | 'update-overlay'\r\n    | 'update-tile'\r\n    | 'update-viewport'\r\n    | 'viewport-change'\r\n    | 'visible'\r\n    | 'zoom';\r\n  type WorldEventName = 'add-item' | 'item-index-change' | 'metrics-change' | 'remove-item';\r\n\r\n  interface OSDEvent<T> extends Event {\r\n    eventSource?: T;\r\n    userData: any;\r\n  }\r\n\r\n  interface ButtonEvent extends OSDEvent<Button> {\r\n    originalEvent: Event;\r\n  }\r\n\r\n  interface TiledImageEvent extends OSDEvent<TiledImage> {\r\n    compositeOperationChange?: string;\r\n    fullyLoaded?: boolean;\r\n    opacity?: boolean;\r\n  }\r\n\r\n  interface TileSourceEvent extends OSDEvent<TileSource> {\r\n    message?: string;\r\n    source?: string;\r\n    tileSource?: object;\r\n  }\r\n\r\n  interface ViewerEvent extends OSDEvent<Viewer> {\r\n    message?: string;\r\n    source?: string;\r\n    options?: object;\r\n    element?: Element;\r\n    location?: Point | Rect;\r\n    placement?: Placement;\r\n    tracker?: MouseTracker;\r\n    position?: Point;\r\n    quick?: boolean;\r\n    shift?: boolean;\r\n    preventDefaultAction?: true;\r\n    delta?: Point;\r\n    speed?: number;\r\n    direction?: number;\r\n    pointerType?: string;\r\n    button?: number;\r\n    buttons?: number;\r\n    pointers?: number;\r\n    insideElementPressed?: boolean;\r\n    buttonDownAny?: boolean;\r\n    preventVerticalPan?: boolean;\r\n    preventHorizontalPan?: boolean;\r\n    gesturePoints?: GesturePoint[];\r\n    lastCenter?: Point;\r\n    center?: Point;\r\n    lastDistance?: number;\r\n    insideElementReleased?: boolean;\r\n    scroll?: number;\r\n    immediately?: number;\r\n    enabled?: boolean;\r\n    flipped?: number;\r\n    fullPage?: boolean;\r\n    fullScreen?: boolean;\r\n    page?: number;\r\n    contentSize?: Point;\r\n    contentBounds?: Rect;\r\n    homeBounds?: Rect;\r\n    contentFactor?: number;\r\n    newContainerSize?: Point;\r\n    mantain?: boolean;\r\n    degrees?: number;\r\n    tile?: Tile;\r\n    tiledImage?: TiledImage | XMLHttpRequest;\r\n    context?: Tile;\r\n    rendered?: Tile;\r\n    time?: number;\r\n    tileRequest?: XMLHttpRequest;\r\n    getCompletionCallback?: (...args: any) => void;\r\n    visible?: boolean;\r\n    refPoint?: Point;\r\n    zoom?: number;\r\n  }\r\n\r\n  interface WorldEvent extends OSDEvent<World> {\r\n    item?: TiledImage;\r\n    previousIndex?: number;\r\n    newIndex?: number;\r\n  }\r\n}\r\n\r\n// Custom type needed for importing types data without having to import the actual JS\r\nexport interface OpenSeadragonType {\r\n  (options: OpenSeadragon.Options): OpenSeadragon.Viewer;\r\n  Rect: typeof OpenSeadragon.Rect;\r\n}\r\n\r\nexport type ViewerType = OpenSeadragon.Viewer;\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}