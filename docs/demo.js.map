{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/@dan503/load-js/index.js","src/demo/demo.ts","src/library/driftory.ts","src/library/openseadragon.types.ts"],"names":[],"mappings":"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","file":"demo.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar alreadyCalledScripts = [];\r\nvar allScripts = {};\r\nvar defaultScript = { hasLoaded: false, callbacks: [] };\r\nvar addCallback = function (src, callback) {\r\n    var script = allScripts[src];\r\n    if (!script)\r\n        return;\r\n    if (script.hasLoaded) {\r\n        // If the script has already been previously loaded, just run the callback immediately\r\n        callback();\r\n    }\r\n    else {\r\n        if (script.callbacks.length > 0) {\r\n            script.callbacks.push(callback);\r\n        }\r\n        else {\r\n            script.callbacks = [callback];\r\n        }\r\n    }\r\n};\r\nfunction loadJS(src, callback) {\r\n    var script = allScripts[src] || defaultScript;\r\n    allScripts[src] = script;\r\n    if (alreadyCalledScripts.indexOf(src) < 0) {\r\n        alreadyCalledScripts.push(src);\r\n        var $scriptElem = document.createElement('script');\r\n        $scriptElem.setAttribute('class', 'load-js-script');\r\n        $scriptElem.src = src;\r\n        $scriptElem.onload = function () {\r\n            addCallback(src, callback);\r\n            var updatedScript = allScripts[src];\r\n            if (updatedScript) {\r\n                updatedScript.hasLoaded = true;\r\n            }\r\n            for (var thisSource in allScripts) {\r\n                var thisScript = allScripts[thisSource] || defaultScript;\r\n                thisScript.callbacks.forEach(function (cb) { return cb(); });\r\n            }\r\n        };\r\n        document.head.appendChild($scriptElem);\r\n    }\r\n    else {\r\n        addCallback(src, callback);\r\n    }\r\n}\r\nexports.default = loadJS;\r\n","import Driftory from '../library/driftory';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const container = document.querySelector('.driftory-viewer-container') as HTMLDivElement | null;\n  const startButton = document.querySelector('.start-button');\n  const endButton = document.querySelector('.end-button');\n  const previousButton = document.querySelector('.previous-button');\n  const nextButton = document.querySelector('.next-button');\n  const hideButton = document.querySelector('.hide-button');\n  const navButton = document.querySelector('.nav-button');\n  const frameInfo = document.querySelector('.frame-info');\n\n  if (!container) {\n    console.error('Cannot find viewer container');\n    return;\n  }\n\n  const driftory = new Driftory({\n    container,\n    prefixUrl: 'https://cdn.jsdelivr.net/npm/openseadragon@2.4/build/openseadragon/images/',\n    onComicLoad: () => {\n      console.log('loaded!');\n    },\n    onFrameChange: ({ frameIndex = 0, isLastFrame }) => {\n      if (frameInfo) {\n        let text = `Frame ${frameIndex + 1}`;\n        if (isLastFrame) {\n          text += ' (last frame!)';\n        }\n\n        frameInfo.textContent = text;\n      }\n    },\n    onNoNext: () => {\n      console.log('User trying to go past end');\n    },\n    onNoPrevious: () => {\n      console.log('User trying to go before beginning');\n    }\n  });\n\n  startButton?.addEventListener('click', () => {\n    driftory.goToFrame(0);\n  });\n\n  endButton?.addEventListener('click', () => {\n    driftory.goToFrame(driftory.getFrameCount() - 1);\n  });\n\n  previousButton?.addEventListener('click', () => {\n    driftory.goToPreviousFrame();\n  });\n\n  nextButton?.addEventListener('click', () => {\n    driftory.goToNextFrame();\n  });\n\n  hideButton?.addEventListener('click', () => {\n    container.classList.toggle('hide');\n  });\n\n  navButton?.addEventListener('click', () => {\n    const flag = !driftory.getNavEnabled();\n    driftory.setNavEnabled(flag);\n    navButton.textContent = flag ? 'disable nav' : 'enable nav';\n  });\n\n  const comicName = 'comic.json';\n  // const comicName = 'comic-no-frames.json';\n  // const comicName = 'comic-hide-until-frame.json';\n  fetch(comicName)\n    .then((response) => {\n      if (!response.ok) {\n        console.error(response);\n        throw new Error('Failed to load ' + comicName);\n      }\n\n      return response.json();\n    })\n    .then((json) => {\n      // console.log(json);\n      driftory.openComic(json);\n    })\n    .catch((error) => console.error(error));\n});\n","import loadJs from '@dan503/load-js';\nimport { Comic } from './Comic.types';\nexport * from './Comic.types';\nexport * from './openseadragon.types';\nimport { OpenSeadragonType, ViewerType } from './openseadragon.types';\n\ninterface OsdRequest {\n  resolve: (value?: unknown) => void;\n  reject: (reason?: any) => void;\n}\n\nlet OpenSeadragon: OpenSeadragonType | undefined;\nlet osdRequest: OsdRequest | undefined;\n\ndeclare global {\n  interface Window {\n    OpenSeadragon: OpenSeadragonType;\n  }\n}\n\nconst osdPromise = new Promise((resolve, reject) => {\n  osdRequest = { resolve, reject };\n});\n\ninterface ImageItem {\n  hideUntilFrame?: number;\n  tiledImage?: OpenSeadragon.TiledImage;\n}\n\ntype Frame = OpenSeadragon.Rect;\ntype Container = HTMLElement;\ntype OnFrameChange = (params: { frameIndex: number; isLastFrame: boolean }) => void;\ntype OnComicLoad = (params: {}) => void;\ntype OnNoNext = (params: {}) => void;\ntype OnNoPrevious = (params: {}) => void;\n\ninterface DriftoryArguments {\n  container: Container;\n  OpenSeadragon?: OpenSeadragonType;\n  onFrameChange?: OnFrameChange;\n  onComicLoad?: OnComicLoad;\n  onNoNext?: OnNoNext;\n  onNoPrevious?: OnNoPrevious;\n  prefixUrl?: string;\n}\n\nexport default class Driftory {\n  container: Container;\n  onFrameChange: OnFrameChange;\n  onComicLoad: OnComicLoad;\n  onNoNext: OnNoNext;\n  onNoPrevious: OnNoPrevious;\n  imageItems: Array<ImageItem> = [];\n  frames: Array<Frame> = [];\n  frameIndex: number = -1;\n  lastScrollTime: number = 0;\n  scrollDelay: number = 2000;\n  viewer?: ViewerType;\n  navEnabled: boolean = true;\n\n  // ----------\n  constructor(args: DriftoryArguments) {\n    this.container = args.container;\n    this.onFrameChange = args.onFrameChange || function () {};\n    this.onComicLoad = args.onComicLoad || function () {};\n    this.onNoNext = args.onNoNext || function () {};\n    this.onNoPrevious = args.onNoPrevious || function () {};\n\n    if (args.OpenSeadragon) {\n      OpenSeadragon = args.OpenSeadragon;\n      this._initialize(args);\n      osdRequest?.resolve();\n    } else {\n      // Note: loadJs only loads the file once, even if called multiple times, and always makes sure\n      // all of the callbacks are called.\n      loadJs(\n        'https://cdn.jsdelivr.net/npm/openseadragon@2.4/build/openseadragon/openseadragon.min.js',\n        () => {\n          OpenSeadragon = window.OpenSeadragon;\n          this._initialize(args);\n          osdRequest?.resolve();\n        }\n      );\n    }\n  }\n\n  // ----------\n  _initialize({ container, prefixUrl }: DriftoryArguments) {\n    this.viewer =\n      OpenSeadragon &&\n      OpenSeadragon({\n        element: container,\n        prefixUrl: prefixUrl,\n        showNavigationControl: false,\n        maxZoomPixelRatio: 10,\n        gestureSettingsMouse: {\n          clickToZoom: false\n        }\n      });\n\n    if (this.viewer) {\n      this.viewer.addHandler('canvas-click', (event) => {\n        if (!event || !event.quick || !event.position || !this.viewer || !this.navEnabled) {\n          return;\n        }\n\n        const point = this.viewer.viewport.pointFromPixel(event.position);\n        let foundIndex = this._getHitFrame(point);\n        if (foundIndex === -1) {\n          const realFrameIndex = this._figureFrameIndex(true);\n          if (realFrameIndex === -1 && this.frameIndex !== undefined) {\n            this.goToFrame(this.frameIndex);\n          } else {\n            this.goToNextFrame();\n          }\n        } else if (foundIndex === this.frameIndex) {\n          this.goToNextFrame();\n        } else {\n          this.goToFrame(foundIndex);\n        }\n      });\n\n      const originalScrollHandler = this.viewer.innerTracker.scrollHandler;\n      this.viewer.innerTracker.scrollHandler = (event) => {\n        if (!this.navEnabled) {\n          // Returning false stops the browser from scrolling itself.\n          return false;\n        }\n\n        if (\n          event.originalEvent.ctrlKey ||\n          event.originalEvent.altKey ||\n          event.originalEvent.metaKey\n        ) {\n          return originalScrollHandler.call(this.viewer?.innerTracker, event);\n        }\n\n        const now = Date.now();\n        // console.log(event.scroll, now, now - this.lastScrollTime);\n        if (now - this.lastScrollTime < this.scrollDelay) {\n          // Returning false stops the browser from scrolling itself.\n          return false;\n        }\n\n        this.lastScrollTime = now;\n        if (event.scroll < 0) {\n          this.goToNextFrame();\n        } else {\n          this.goToPreviousFrame();\n        }\n\n        // Returning false stops the browser from scrolling itself.\n        return false;\n      };\n\n      window.addEventListener('keydown', (event) => {\n        if (event.altKey || event.shiftKey || event.ctrlKey || event.metaKey || !this.navEnabled) {\n          return;\n        }\n\n        if (event.key === 'ArrowRight' || event.key === 'ArrowDown' || event.key === ' ') {\n          this.goToNextFrame();\n        } else if (event.key === 'ArrowLeft' || event.key === 'ArrowUp') {\n          this.goToPreviousFrame();\n        } else {\n          return;\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n      });\n    }\n  }\n\n  // ----------\n  openComic(unsafeComic: Comic | string) {\n    if (this.frames.length || this.imageItems.length) {\n      console.error(\n        'Currently the Driftory viewer is not set up to load a second comic after the first.'\n      );\n\n      return;\n    }\n\n    const { comic } =\n      typeof unsafeComic === 'string' ? (JSON.parse(unsafeComic) as Comic) : unsafeComic;\n\n    osdPromise.then(() => {\n      this.container.style.backgroundColor = comic.body.backgroundColor;\n\n      if (this.viewer) {\n        if (comic.body.frames) {\n          this.frames = comic.body.frames.map((frame) => {\n            return new OpenSeadragon!.Rect(\n              frame.x - frame.width / 2,\n              frame.y - frame.height / 2,\n              frame.width,\n              frame.height\n            );\n          });\n        } else {\n          this.frames = comic.body.items.map((item) => {\n            return new OpenSeadragon!.Rect(\n              item.x - item.width / 2,\n              item.y - item.height / 2,\n              item.width,\n              item.height\n            );\n          });\n        }\n\n        comic.body.items.forEach((item, i) => {\n          const imageItem: ImageItem = {\n            hideUntilFrame: item.hideUntilFrame\n          };\n\n          this.imageItems.push(imageItem);\n\n          this.viewer?.addTiledImage({\n            preload: true,\n            x: item.x - item.width / 2,\n            y: item.y - item.height / 2,\n            width: item.width,\n            success: (event: any) => {\n              imageItem.tiledImage = event.item as OpenSeadragon.TiledImage;\n              this._updateImageVisibility();\n\n              if (i === 0) {\n                this._startComic();\n              }\n            },\n            tileSource: {\n              type: 'legacy-image-pyramid',\n              levels: [\n                {\n                  url: item.url,\n                  width: item.width,\n                  height: item.height\n                }\n              ]\n            }\n          });\n        });\n      }\n    });\n  }\n\n  // ----------\n  _startComic() {\n    const frameHandler = () => {\n      const frameIndex = this._figureFrameIndex(false);\n      if (frameIndex !== -1 && frameIndex !== this.frameIndex) {\n        this.frameIndex = frameIndex;\n        this._updateImageVisibility();\n\n        if (this.onFrameChange) {\n          this.onFrameChange({\n            frameIndex,\n            isLastFrame: frameIndex === this.getFrameCount() - 1\n          });\n        }\n      }\n    };\n\n    if (this.viewer) {\n      this.viewer.addHandler('zoom', frameHandler);\n      this.viewer.addHandler('pan', frameHandler);\n    }\n\n    this.goToFrame(0);\n\n    if (this.onComicLoad) {\n      this.onComicLoad({});\n    }\n  }\n\n  // ----------\n  _updateImageVisibility() {\n    this.imageItems.forEach((imageItem) => {\n      if (imageItem.hideUntilFrame !== undefined) {\n        imageItem.tiledImage?.setOpacity(this.frameIndex < imageItem.hideUntilFrame ? 0 : 1);\n      }\n    });\n  }\n\n  // ----------\n  getNavEnabled() {\n    return this.navEnabled;\n  }\n\n  // ----------\n  setNavEnabled(flag: boolean) {\n    this.navEnabled = flag;\n    this.viewer?.setMouseNavEnabled(flag);\n  }\n\n  // ----------\n  goToFrame(index: number) {\n    if (this.getFrameIndex() !== index) {\n      var frame = this.frames[index];\n      var bufferFactor = 0.2;\n      if (frame) {\n        var box = frame.clone();\n\n        box.width *= 1 + bufferFactor;\n        box.height *= 1 + bufferFactor;\n        box.x -= frame.width * bufferFactor * 0.5;\n        box.y -= frame.height * bufferFactor * 0.5;\n\n        this.viewer?.viewport.fitBounds(box);\n      }\n    }\n  }\n\n  // ----------\n  getFrameIndex() {\n    return this.frameIndex;\n  }\n\n  // ----------\n  _figureFrameIndex(current: boolean) {\n    let bestIndex = -1;\n    let bestDistance = Infinity;\n    if (this.viewer) {\n      const viewportBounds = this.viewer.viewport.getBounds(current);\n      const viewportCenter = viewportBounds.getCenter();\n\n      for (let i = 0; i < this.frames.length; i++) {\n        const frame = this.frames[i];\n        if (frame.containsPoint(viewportCenter)) {\n          const distance = viewportCenter.squaredDistanceTo(frame.getCenter());\n          if (distance < bestDistance) {\n            bestDistance = distance;\n            bestIndex = i;\n          }\n        }\n      }\n    }\n    return bestIndex;\n  }\n\n  // ----------\n  _getHitFrame(point: OpenSeadragon.Point) {\n    if (this.viewer) {\n      for (let i = 0; i < this.frames.length; i++) {\n        const frame = this.frames[i];\n        if (frame.containsPoint(point)) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  // ----------\n  getFrameCount() {\n    return this.frames.length;\n  }\n\n  // ----------\n  goToNextFrame() {\n    let index = this.getFrameIndex();\n    if (index < this.frames.length - 1) {\n      this.goToFrame(index + 1);\n    } else {\n      this.onNoNext({});\n    }\n  }\n\n  // ----------\n  goToPreviousFrame() {\n    let index = this.getFrameIndex();\n    if (index > 0) {\n      this.goToFrame(index - 1);\n    } else {\n      this.onNoPrevious({});\n    }\n  }\n}\n","// Type definitions is a manual copy of @types/openseadragon\n\n// Type definitions for OpenSeadragon 2.4\n// Project: https://openseadragon.github.io/\n// Definitions by:  Álvaro Martínez <https://github.com/alvaromartmart>\n//                  RobertYost <https://github.com/RobertYost>\n//                  Jasper Staab <https://github.com/jstaab>\n//                  Kristin Ruben <https://github.com/kristinruben>\n//                  Geoff Harper <https://github.com/geoff-harper>\n//                  Justin <https://github.com/justincy>\n//                  Peter Blazejewicz <https://github.com/peterblazejewicz>\n// Definitions: https://github.com/alvaromartmart/types-openseadragon\n// TypeScript Version: 3.1\ndeclare namespace OpenSeadragon {\n  class Browser {\n    vendor: BROWSERS;\n    version: number;\n    alpha: boolean;\n  }\n\n  enum BROWSERS {\n    UNKNOWN = 0,\n    IE = 1,\n    FIREFOX = 2,\n    SAFARI = 3,\n    CHROME = 4,\n    OPERA = 5\n  }\n\n  enum ButtonState {\n    REST,\n    GROUP,\n    HOVER,\n    DOWN\n  }\n\n  enum ControlAnchor {\n    NONE,\n    TOP_LEFT,\n    TOP_RIGHT,\n    BOTTOM_LEFT,\n    BOTTOM_RIGHT,\n    ABSOLUTE\n  }\n\n  const DEFAULT_SETTINGS: Options;\n\n  const fullScreenApi: {\n    supportsFullScreen: boolean;\n    isFullScreen: () => boolean;\n    getFullScreenElement: () => HTMLElement;\n    requestFullScreen: () => void;\n    exitFullScreen: () => void;\n    cancelFullScreen: () => void;\n    fullScreenEventName: string;\n    fullScreenErrorEventName: string;\n  };\n\n  enum OverlayPlacement {\n    CENTER,\n    TOP_LEFT,\n    TOP,\n    TOP_RIGHT,\n    RIGHT,\n    BOTTOM_RIGHT,\n    BOTTOM,\n    BOTTOM_LEFT,\n    LEFT\n  }\n\n  enum OverlayRotationMode {\n    NO_ROTATION,\n    EXACT,\n    BOUNDING_BOX\n  }\n\n  let pixelDensityRatio: number;\n\n  enum Placement {\n    CENTER,\n    TOP_LEFT,\n    TOP,\n    TOP_RIGHT,\n    RIGHT,\n    BOTTOM_RIGHT,\n    BOTTOM,\n    BOTTOM_LEFT,\n    LEFT\n  }\n\n  let supportsCanvas: boolean;\n\n  let version: {\n    versionStr: string;\n    major: number;\n    minor: number;\n    revision: number;\n  };\n\n  function addClass(element: Element | string, className: string): void;\n\n  function addEvent(\n    element: Element | string,\n    eventName: string,\n    handler: (event: Event) => void,\n    useCapture?: boolean\n  ): void;\n\n  function cancelEvent(event?: OSDEvent<any>): void;\n\n  function capitalizeFirstLetter(value: string): string;\n\n  function createCallback(\n    object: object,\n    method: (...args: any[]) => void,\n    ...args: any[]\n  ): (...args: any[]) => void;\n\n  function delegate(\n    object: object,\n    method: (...args: any[]) => void\n  ): (object: any, ...args: any[]) => void; // REVIEW: unsure of return type\n\n  function extend(): any;\n\n  function getCssPropertyWithVendorPrefix(property: string): string;\n\n  function getElement(element: string | Element): Element;\n\n  function getElementOffset(element: Element | string): Point;\n\n  function getElementPosition(element: Element | string): Point;\n\n  function getElementSize(element: Element | string): Point;\n\n  function getElementStyle(element: Element | string): any; // CSSStyle?\n\n  function getMousePosition(event?: OSDEvent<any>): Point;\n\n  function getPageScroll(): Point;\n\n  function getString(property: string): string;\n\n  function getUrlParameter(key: string): string;\n\n  function getWindowSize(): Point;\n\n  function imageFormatSupported(extension?: string): boolean;\n\n  function indexOf(array: any[], searchElement: object, fromIndex?: number): number;\n\n  // (missing jquery functions)\n\n  function makeAjaxRequest(options: {\n    url: string;\n    success: (obj: object) => void;\n    error: (obj: object) => void;\n    headers: object;\n    responseType: string;\n    withCredentials?: boolean;\n  }): XMLHttpRequest;\n\n  function makeCenteredNode(element: Element | string): Element;\n\n  function makeNeutralElement(tagName: string): Element;\n\n  function makeTransparentImage(src: string): Element;\n\n  function now(): number;\n\n  function parseJSON(string: string): object;\n\n  function parseXml(string: string): Document;\n\n  function pointInElement(element: Element | string, point: Point): boolean;\n\n  function positiveModulo(number: number, modulo: number): number;\n\n  function removeClass(element: Element | string, className: string): void;\n\n  function removeEvent(\n    element: Element | string,\n    eventName: string,\n    handler: EventHandler<any>,\n    useCapture?: boolean\n  ): void;\n\n  function setElementOpacity(element: Element | string, opacity: number, usesAlpha?: boolean): void;\n\n  function setElementTouchActionNone(element: Element | string): void;\n\n  function setPageScroll(point: Point): void;\n\n  function setString(property: string, value: any): void;\n\n  function stopEvent(event?: OSDEvent<any>): void;\n\n  interface GestureSettings {\n    scrollToZoom?: boolean;\n    clickToZoom?: boolean;\n    dblClickToZoom?: boolean;\n    pinchToZoom?: boolean;\n    flickEnabled?: boolean;\n    flickMinSpeed?: number;\n    flickMomentum?: number;\n  }\n\n  interface NavImagesValues {\n    REST: string;\n    GROUP: string;\n    HOVER: string;\n    DOWN: string;\n  }\n  interface NavImages {\n    zoomIn: NavImagesValues;\n    zoomOut: NavImagesValues;\n    home: NavImagesValues;\n    fullpage: NavImagesValues;\n    rotateleft: NavImagesValues;\n    rotateright: NavImagesValues;\n    flip: NavImagesValues;\n    previous: NavImagesValues;\n    next: NavImagesValues;\n  }\n\n  interface Options {\n    id?: string;\n    element?: HTMLElement;\n    tileSources?:\n      | string\n      | string[]\n      | TileSource[]\n      | TileSourceOptions\n      | {\n          type: string;\n          levels: Array<{\n            url: string;\n            height: number;\n            width: number;\n          }>;\n        }\n      | {\n          Image: {\n            xmlns?: string;\n            Url: string;\n            Format: string;\n            Overlap: string;\n            TileSize: string;\n            Size: {\n              Width: string;\n              Height: string;\n            };\n          };\n        };\n    tabIndex?: number;\n    overlays?: any[];\n    prefixUrl?: string;\n    navImages?: NavImages;\n    debugMode?: boolean;\n    debugGridColor?: string[];\n    blendTime?: number;\n    alwaysBlend?: boolean;\n    autoHideControls?: boolean;\n    immediateRender?: boolean;\n    defaultZoomLevel?: number;\n    opacity?: number;\n    preload?: boolean;\n    compositeOperation?:\n      | 'source-over'\n      | 'source-atop'\n      | 'source-in'\n      | 'source-out'\n      | 'destination-over'\n      | 'destination-atop'\n      | 'destination-in'\n      | 'destination-out'\n      | 'lighter'\n      | 'copy'\n      | 'xor';\n    placeholderFillStyle?: string | CanvasGradient | CanvasPattern;\n    degrees?: number;\n    flipped?: boolean;\n    minZoomLevel?: number;\n    maxZoomLevel?: number;\n    homeFillsViewer?: boolean;\n    panHorizontal?: boolean;\n    panVertical?: boolean;\n    constrainDuringPan?: boolean;\n    wrapHorizontal?: boolean;\n    wrapVertical?: boolean;\n    minZoomImageRatio?: number;\n    maxZoomPixelRatio?: number;\n    smoothTileEdgesMinZoom?: number;\n    iOSDevice?: boolean;\n    autoResize?: boolean;\n    preserveImageSizeOnResize?: boolean;\n    minScrollDeltaTime?: number;\n    pixelsPerWheelLine?: number;\n    pixelsPerArrowPress?: number;\n    visibilityRatio?: number;\n    viewportMargins?: object;\n    imageLoaderLimit?: number;\n    clickTimeThreshold?: number;\n    clickDistThreshold?: number;\n    dblClickTimeThreshold?: number;\n    dblClickDistThreshold?: number;\n    springStiffness?: number;\n    animationTime?: number;\n    gestureSettingsMouse?: GestureSettings;\n    gestureSettingsTouch?: GestureSettings;\n    gestureSettingsPen?: GestureSettings;\n    gestureSettingsUnknown?: GestureSettings;\n    zoomPerClick?: number;\n    zoomPerScroll?: number;\n    zoomPerSecond?: number;\n    showNavigator?: boolean;\n    navigatorId?: string;\n    navigatorPosition?: 'TOP_LEFT' | 'TOP_RIGHT' | 'BOTTOM_LEFT' | 'BOTTOM_RIGHT' | 'ABSOLUTE';\n    navigatorSizeRatio?: number;\n    navigatorMaintainSizeRatio?: boolean;\n    navigatorTop?: number | string;\n    navigatorLeft?: number | string;\n    navigatorHeight?: number | string;\n    navigatorWidth?: number | string;\n    navigatorAutoResize?: boolean;\n    navigatorAutoFade?: boolean;\n    navigatorRotate?: boolean;\n    navigatorBackground?: string;\n    navigatorOpacity?: number;\n    navigatorBorderColor?: string;\n    navigatorDisplayRegionColor?: string;\n    controlsFadeDelay?: number;\n    controlsFadeLength?: number;\n    maxImageCacheCount?: number;\n    timeout?: number;\n    useCanvas?: boolean;\n    minPixelRatio?: number;\n    mouseNavEnabled?: number;\n    showNavigationControl?: boolean;\n    navigationControlAnchor?: ControlAnchor;\n    showZoomControl?: boolean;\n    showHomeControl?: boolean;\n    showFullPageControl?: boolean;\n    showRotationControl?: boolean;\n    showFlipControl?: boolean;\n    showSequenceControl?: boolean;\n    sequenceControlAnchor?: ControlAnchor;\n    navPrevNextWrap?: boolean;\n    zoomInButton?: string;\n    zoomOutButton?: string;\n    homeButton?: string;\n    fullPageButton?: string;\n    rotateLeftButton?: string;\n    rotateRightButton?: string;\n    previousButton?: string;\n    nextButton?: string;\n    sequenceMode?: boolean;\n    /**\n     * If sequenceMode is true, display this page initially.\n     * @default 0\n     */\n    initialPage?: number;\n    preserveViewport?: boolean;\n    preserveOverlays?: boolean;\n    showReferenceStrip?: boolean;\n    referenceStripScroll?: string;\n    referenceStripElement?: HTMLElement;\n    referenceStripHeight?: number;\n    referenceStripWidth?: number;\n    referenceStripPosition?: string;\n    referenceStripSizeRatio?: number;\n    collectionMode?: boolean;\n    collectionRows?: number;\n    collectionColumns?: number;\n    collectionLayout?: 'horizontal' | 'vertical';\n    collectionTileSize?: number;\n    collectionTileMargin?: number;\n    crossOriginPolicy?: 'Anonymous' | 'use-credentials' | false;\n    ajaxWithCredentials?: boolean;\n    loadTilesWithAjax?: boolean;\n    ajaxHeaders?: object;\n    imageSmoothingEnabled?: boolean;\n    rotationIncrement?: number;\n  }\n\n  interface TileSourceOptions {\n    url?: string;\n    referenceStripThumbnailUrl?: string;\n    success?: (event: Event) => void;\n    ajaxWithCredentials?: boolean;\n    ajaxHeaders?: object;\n    width?: number;\n    height?: number;\n    tileSize?: number;\n    tileWidth?: number;\n    tileHeight?: number;\n    tileOverlap?: number;\n    minLevel?: number;\n    maxLevel?: number;\n    getTileUrl?: (l: number, x: number, y: number) => string;\n  }\n\n  class Button extends EventSource {\n    currentState: ButtonState;\n    element: Element;\n    fadeDelay: number;\n    fadeLength: number;\n    tracker: MouseTracker;\n\n    constructor(options: {\n      element?: Element;\n      tooltip?: string;\n      srcRest?: string;\n      srcGroup?: string;\n      srcHover?: string;\n      srcDown?: string;\n      fadeDelay?: number;\n      fadeLength?: number;\n      onPress?: EventHandler<ButtonEvent>;\n      onRelease?: EventHandler<ButtonEvent>;\n      onClick?: EventHandler<ButtonEvent>;\n      onEnter?: EventHandler<ButtonEvent>;\n      onExit?: EventHandler<ButtonEvent>;\n      onFocus?: EventHandler<ButtonEvent>;\n      onBlur?: EventHandler<ButtonEvent>;\n    });\n\n    addHandler(\n      eventName: ButtonEventName,\n      handler: EventHandler<ButtonEvent>,\n      userData?: object\n    ): void;\n    addOnceHandler(\n      eventName: ButtonEventName,\n      handler: EventHandler<ButtonEvent>,\n      userData?: object,\n      times?: number\n    ): void;\n    disable(): void;\n    enable(): void;\n    getHandler(eventName: ButtonEventName): (source: ButtonEventName, ...args: any[]) => void;\n    raiseEvent(eventName: ButtonEventName, eventArgs: object): void;\n    removeAllHandlers(eventName: ButtonEventName): void;\n    removeHandler(eventName: ButtonEventName, handler: EventHandler<ButtonEvent>): void;\n  }\n\n  class ButtonGroup {\n    buttons: Button[];\n    element: Element;\n    tracker: MouseTracker;\n\n    constructor(options: { buttons: Button[]; element?: Element });\n  }\n\n  interface TControlOptions {\n    anchor?: ControlAnchor;\n    attachToViewer?: boolean;\n    autoFade?: boolean;\n  }\n\n  class Control {\n    anchor: ControlAnchor;\n    autoFade: boolean;\n    container: Element;\n    element: Element;\n    wrapper: Element;\n\n    constructor(element: Element, options: TControlOptions, container: Element);\n\n    destroy(): void;\n    isVisible(): boolean;\n    setOpacity(opacity: number): void;\n    setVisible(visible: boolean): void;\n  }\n\n  class ControlDock {\n    constructor(options: object);\n\n    addControl(element: Control, controlOptions: TControlOptions): void;\n    areControlsEnabled(): boolean;\n    clearControls(): ControlDock;\n    removeControl(element: Control): ControlDock;\n    setControlsEnabled(enabled: boolean): ControlDock;\n  }\n\n  class DisplayRect extends Rect {\n    maxLevel: number;\n    minLevel: number;\n\n    constructor(\n      x: number,\n      y: number,\n      width: number,\n      height: number,\n      minLevel: number,\n      maxLevel: number\n    );\n  }\n\n  class Drawer {\n    canvas: HTMLCanvasElement | HTMLElement;\n    container: Element;\n    context: CanvasRenderingContext2D | null;\n    // element : Element; // Deprecated\n\n    constructor(options: {\n      viewer: Viewer;\n      viewport: Viewport;\n      element: Element;\n      debugGridColor?: string;\n    });\n\n    blendSketch(options: {\n      opacity: number;\n      scale?: number;\n      translate?: Point;\n      compositeOperation?: string;\n      bounds?: Rect;\n    }): void;\n    canRotate(): boolean;\n    clear(): void;\n    destroy(): void;\n    drawTile(\n      tile: Tile,\n      drawingHandler: (context: CanvasRenderingContext2D, tile: any, rendered: any) => void, // TODO: determine handler parameter types\n      useSketch: boolean,\n      scale?: number,\n      translate?: Point\n    ): void;\n    getCanvasSize(sketch: boolean): Point;\n    getOpacity(): number;\n    setOpacity(opacity: number): Drawer;\n    viewportToDrawerRectangle(rectangle: Rect): Rect;\n    setImageSmoothingEnabled(imageSmoothingEnabled?: boolean): void;\n    viewportCoordToDrawerCoord(point: Point): Point;\n    clipWithPolygons(polygons: Point[][], useSketch?: boolean): void;\n  }\n\n  class DziTileSource extends TileSource {\n    constructor(\n      width: number,\n      height: number,\n      tileSize: number,\n      tileOverlap: number,\n      tilesUrl: number,\n      fileFormat: number,\n      displayRects: number,\n      minLevel: number,\n      maxLevel: number\n    );\n  }\n\n  class IIIFTileSource extends TileSource {\n    constructor(options: TileSourceOptions & { tileFormat?: string });\n  }\n\n  class ImageLoader {\n    constructor(options: { jobLimit?: number; timeout?: number });\n\n    addJob(options: {\n      src?: string;\n      loadWithAjax?: string;\n      ajaxHeaders?: string;\n      crossOriginPolicy?: string | boolean;\n      ajaxWithCredentials?: boolean;\n      callback?: () => void;\n      abort?: () => void;\n    }): void;\n    clear(): void;\n  }\n\n  class ImageTileSource extends TileSource {\n    constructor(options: {\n      url: string;\n      buildPyramid?: boolean;\n      crossOriginPolicy?: string | boolean;\n      ajaxWithCredentials?: string | boolean;\n      useCanvas?: boolean;\n    });\n  }\n\n  class LegacyTileSource extends TileSource {\n    constructor(\n      levels?: Array<{\n        url: string;\n        width: number;\n        height: number;\n      }>\n    );\n  }\n\n  interface MouseTrackerOptions {\n    element: Element | string;\n    startDisabled?: boolean;\n    clickTimeThreshold?: number;\n    clickDistThreshold?: number;\n    dblClickTimeThreshold?: number;\n    dblClickDistThreshold?: number;\n    stopDelay?: number;\n    enterHandler?: EventHandler<OSDEvent<any>>;\n    exitHandler?: EventHandler<OSDEvent<any>>;\n    pressHandler?: EventHandler<OSDEvent<any>>;\n    nonPrimaryPressHandler?: EventHandler<OSDEvent<any>>;\n    releaseHandler?: EventHandler<OSDEvent<any>>;\n    nonPrimaryReleaseHandler?: EventHandler<OSDEvent<any>>;\n    moveHandler?: EventHandler<OSDEvent<any>>;\n    scrollHandler?: EventHandler<OSDEvent<any>>;\n    clickHandler?: EventHandler<OSDEvent<any>>;\n    dblClickHandler?: EventHandler<OSDEvent<any>>;\n    dragHandler?: EventHandler<OSDEvent<any>>;\n    dragEndHandler?: EventHandler<OSDEvent<any>>;\n    pinchHandler?: EventHandler<OSDEvent<any>>;\n    keyDownHandler?: EventHandler<OSDEvent<any>>;\n    keyUpHandler?: EventHandler<OSDEvent<any>>;\n    keyHandler?: EventHandler<OSDEvent<any>>;\n    focusHandler?: EventHandler<OSDEvent<any>>;\n    blurHandler?: EventHandler<OSDEvent<any>>;\n    userData?: object;\n  }\n  class MouseTracker {\n    clickTimeThreshold: number;\n    clickDistThreshold: number;\n    dblClickTimeThreshold: number;\n    dblClickDistThreshold: number;\n    element: Element;\n\n    constructor(options: MouseTrackerOptions);\n\n    blurHandler: (event: OSDEvent<any>) => void;\n    clickHandler: (event: OSDEvent<any>) => void;\n    dblClickHandler: (event: OSDEvent<any>) => void;\n    destroy(): void;\n    dragEndHandler: (event: OSDEvent<any>) => void;\n    dragHandler: (event: OSDEvent<any>) => void;\n    enterHandler: (event: OSDEvent<any>) => void;\n    exitHandler: (event: OSDEvent<any>) => void;\n    focusHandler: (event: OSDEvent<any>) => void;\n    getActivePointerCount(): number;\n    getActivePointersListByType(type: string): GesturePointList;\n    getActivePointersListsExceptType(type: string): GesturePointList[];\n    keyDownHandler: (event: OSDEvent<any>) => void;\n    keyHandler: (event: OSDEvent<any>) => void;\n    keyUpHandler: (event: OSDEvent<any>) => void;\n    moveHandler: (event: OSDEvent<any>) => void;\n    nonPrimaryPressHandler: (event: OSDEvent<any>) => void;\n    nonPrimaryReleaseHandler: (event: OSDEvent<any>) => void;\n    pinchHandler: (event: OSDEvent<any>) => void;\n    pressHandler: (event: OSDEvent<any>) => void;\n    releaseHandler: (event: OSDEvent<any>) => void;\n    scrollHandler: (event: OSDEvent<any>) => void;\n    setTracking(track: boolean): any;\n    stopHandler: (event: OSDEvent<any>) => void;\n  }\n\n  interface GesturePoint {\n    id: number;\n    type: string;\n    captured: boolean;\n    isPrimary: boolean;\n    insideElementPressed: boolean;\n    insideElement: boolean;\n    speed: number;\n    direction: number;\n    contactPos: Point;\n    contactTime: number;\n    lastPos: Point;\n    lastTime: number;\n    currentPos: Point;\n    currentTime: number;\n  }\n\n  class GesturePointList {\n    buttons: Button[];\n    captureCount: number;\n    clicks: number;\n    contacts: number;\n    type: string;\n\n    constructor(type: string);\n\n    add(gesturePoint: GesturePoint): number;\n    addContact(): void;\n    asArray(): GesturePoint[];\n    getById(id: number): GesturePoint | null;\n    getByIndex(index: number): GesturePoint | null;\n    getLength(): number;\n    getPrimary(): GesturePoint | null;\n    removeById(id: number): number;\n    removeContact(): void;\n  }\n\n  class Navigator extends Viewer {\n    setFlip(state: boolean): void;\n    update(viewport: Viewport): void;\n    updateSize(): void;\n    setWidth(width: number | string): void;\n    setHeight(width: number | string): void;\n  }\n\n  class OsmTileSource extends TileSource {\n    constructor(\n      width: number,\n      height: number,\n      tileSize: number,\n      tileOverlap: number,\n      tilesUrl: string\n    );\n  }\n\n  type OnDrawCallback = (position: Point, size: Point, element: HTMLElement) => void;\n\n  interface OverlayOptions {\n    element: HTMLElement;\n    location: Point | Rect;\n    placement?: Placement;\n    onDraw?: OnDrawCallback;\n    checkResize?: boolean;\n    width?: number;\n    height?: number;\n    rotationMode?: boolean;\n  }\n\n  class Overlay {\n    constructor(options: OverlayOptions);\n    adjust(position: Point, size: Point): void;\n    destroy(): void;\n    drawHTML(container: HTMLElement): void;\n    getBounds(viewport: Viewport): Rect;\n    update(location: Point | Rect, placement: Placement): void;\n  }\n\n  class Point {\n    x: number;\n    y: number;\n    constructor(x?: number, y?: number);\n    apply(func: (v: number) => number): Point;\n    clone(): Point;\n    distanceTo(point: Point): number;\n    divide(factor: number): Point;\n    equals(point: Point): boolean;\n    minus(point: Point): Point;\n    negate(): Point;\n    plus(point: Point): Point;\n    rotate(degrees: number, pivot?: Point): Point;\n    squaredDistanceTo(point: Point): number;\n    times(factor: number): Rect;\n    toString(): string;\n  }\n\n  class Rect {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    degrees: number;\n    constructor(x?: number, y?: number, width?: number, height?: number, degrees?: number);\n    clone(): Rect;\n    containsPoint(point: Point, epsilon?: number): boolean;\n    equals(rectangle: Rect): boolean;\n    getAspectRatio(): number;\n    getBottomLeft(): Point;\n    getBottomRight(): Point;\n    getBoundingBox(): Rect;\n    getCenter(): Point;\n    getIntegerBoundingBox(): Rect;\n    getSize(): Point;\n    getTopLeft(): Point;\n    getTopRight(): Point;\n    intersection(rect: Rect): Rect;\n    rotate(degrees: number, pivot?: Rect): Rect;\n    times(factor: number): Rect;\n    toString(): string;\n    translate(delta: Point): Rect;\n    union(rect: Rect): Rect;\n  }\n\n  class ReferenceStrip {\n    constructor(options: object);\n    setFocus(): void;\n    update(): void;\n  }\n\n  class Spring {\n    animationTime: number;\n    current: {\n      value: number;\n      time: number;\n    };\n    springStiffness: number;\n    start: {\n      value: number;\n      time: number;\n    };\n    constructor(options: {\n      springStiffness: number;\n      animationTime: number;\n      initial?: number;\n      exponential?: boolean;\n    });\n    isAtTargetValue(): boolean;\n    resetTo(target: number): void;\n    shiftBy(delta: number): void;\n    springTo(target: number): void;\n    update(): void;\n  }\n\n  class Tile {\n    ajaxHeaders: object;\n    beingDrawn: boolean;\n    blendStart: number;\n    bounds: Rect;\n    cacheKey: string;\n    context2D: CanvasRenderingContext2D;\n    element: Element;\n    exists: boolean;\n    image: object;\n    imgElement: HTMLImageElement;\n    isBottomMost: boolean;\n    isRightMost: boolean;\n    lastTouchTime: number;\n    level: number;\n    loaded: boolean;\n    loading: boolean;\n    loadWithAjax: boolean;\n    opacity: number;\n    position: Point;\n    size: Point;\n    sourceBounds: Rect;\n    style: string;\n    url: string;\n    visibility: number;\n    x: number;\n    y: number;\n\n    constructor(\n      level: number,\n      x: number,\n      y: number,\n      bounds: Rect,\n      exists: boolean,\n      url: string,\n      context2D: CanvasRenderingContext2D,\n      loadWithAjax: boolean,\n      ajaxHeaders: object,\n      sourceBounds: Rect\n    );\n    drawCanvas(\n      context: CanvasRenderingContext2D,\n      drawingHandler: (context: CanvasRenderingContext2D, tile: any, rendered: any) => void,\n      scale?: number,\n      translate?: Point\n    ): void;\n    drawHTML(container: Element): void;\n    getScaleForEdgeSmoothing(): number;\n    getTranslationForEdgeSmoothing(scale?: number): Point;\n    toString(): string;\n    unload(): void;\n  }\n\n  class TileCache {\n    constructor(options: { maxImageCacheCount?: number });\n    cacheTile(options: {\n      tile: Tile;\n      image: HTMLImageElement; // TODO: check type\n      tiledImage: TiledImage;\n      cutoff?: number;\n    }): void;\n    clearTilesFor(tiledImage: TiledImage): void;\n    numTilesLoaded(): number;\n  }\n\n  class TiledImage {\n    source: TileSource;\n    constructor(options: {\n      source: TileSource;\n      viewer: Viewer;\n      tileCache: TileCache;\n      drawer: Drawer;\n      imageLoader: ImageLoader;\n      x?: number;\n      y?: number;\n      width?: number;\n      height?: number;\n      fitBounds?: Rect;\n      fitBoundsPlacement?: Placement;\n      clip?: Rect;\n      springStiffness?: number;\n      animationTime?: boolean;\n      minZoomImageRatio?: number;\n      wrapHorizontal?: boolean;\n      wrapVertical?: boolean;\n      immediateRender?: boolean;\n      blendTime?: number;\n      alwaysBlend?: boolean;\n      minPixelRatio?: number;\n      smoothTileEdgesMinZoom?: number;\n      iOSDevice?: boolean;\n      opacity?: number;\n      preload?: boolean;\n      compositeOperation?: string;\n      debugMode?: boolean;\n      placeholderFillStyle?: string | CanvasGradient | CanvasPattern;\n      crossOriginPolicy?: string | boolean;\n      ajaxWithCredentials?: boolean;\n      loadTilesWithAjax?: boolean;\n      ajaxHeaders?: object;\n    });\n\n    addHandler(eventName: string, handler: EventHandler<TiledImageEvent>, userData?: object): void;\n    addOnceHandler(\n      eventName: string,\n      handler: EventHandler<TiledImageEvent>,\n      userData?: object\n    ): void;\n    destroy(): void;\n    draw(): void;\n    fitBounds(bounds: Rect, anchor?: Placement, immediately?: boolean): void;\n    getBounds(current?: boolean): Rect;\n    getBoundsNoRotate(current?: boolean): Rect;\n    getClip(): Rect | null;\n    getClippedBounds(current?: boolean): Rect;\n    getCompositeOperation(): string;\n    getContentSize(): Point;\n    getFullyLoaded(): boolean;\n    getHandler(eventName: string): (source: Event, ...args: any[]) => void;\n    getOpacity(): number;\n    getPreload(): boolean;\n    getRotation(current?: boolean): number;\n    imageToViewerElementCoordinats(pixel: Point): Point;\n    imageToViewportCoordinates(position: Point, current?: boolean): Point;\n    imageToViewportCoordinates(imageX: number, imageY: number, current?: boolean): Point;\n    imageToViewportRectangle(\n      imageX: number,\n      imageY?: number,\n      pixelWidth?: number,\n      pixelHeight?: number,\n      current?: boolean\n    ): Rect;\n    imageToViewportRectangle(\n      position: Rect,\n      pixelWidth?: number,\n      pixelHeight?: number,\n      current?: boolean\n    ): Rect;\n\n    imageToViewportZoom(imageZoom: number): number;\n    imageToWindowCoordinates(pixel: Point): Point;\n    needsDraw(): boolean;\n    raiseEvent(eventName: string, eventArgs: object): void;\n    removeAllHandlers(eventName: string): void;\n    removeHandler(eventName: string, handler: EventHandler<TiledImageEvent>): void;\n    reset(): void;\n    resetCroppingPolygons(): void;\n    setClip(newClip: Rect | null): void;\n    setCompositeOperation(compositeOperation: string): void;\n    setCroppingPolygons(polygons: Point[][]): void;\n    setHeight(height: number, immediately?: boolean): void;\n    setOpacity(opacity: number): void;\n    setPosition(position: Point, immediately?: boolean): void;\n    setPreload(preload: boolean): void;\n    setRotation(degrees: number, immediately?: boolean): void;\n    setWidth(width: number, immediately?: boolean): void;\n    update(): boolean;\n    viewerElementToImageCoordinates(pixel: Point): Point;\n    viewportToImageCoordinates(position: Point, current?: boolean): Point;\n    viewportToImageCoordinates(viewerX: number, viewerY: number, current?: boolean): Point;\n    viewportToImageRectangle(position: Rect): Rect;\n    viewportToImageRectangle(\n      viewportX: number,\n      viewportY: number,\n      pixelWidth?: number,\n      pixelHeight?: number,\n      current?: boolean\n    ): Rect;\n    viewportToImageZoom(viewportZoom: number): number;\n    windowToImageCoordinates(pixel: Point): Point;\n  }\n\n  class TileSource extends EventSource {\n    aspectRatio: number;\n    dimensions: Point;\n    maxLevel: number;\n    minlevel: number;\n    ready: boolean;\n    tileOverlap: number;\n    constructor(options: TileSourceOptions);\n    addHandler(eventName: string, handler: EventHandler<TileSourceEvent>, userData?: object): void;\n    addOnceHandler(\n      eventName: string,\n      handler: EventHandler<TileSourceEvent>,\n      userData?: object,\n      times?: number\n    ): void;\n    configure(data: string | object | any[] | Document): object;\n    getClosestLevel(): number;\n    getHandler(eventName: string): (event: Event) => void;\n    getImageInfo(url: string): void;\n    getLevelScale(level: number): number;\n    getNumTiles(level: number): number;\n    getPixelRatio(level: number): number;\n    getTileAjaxHeaders(level: number, x: number, y: number): object;\n    getTileAtPoint(level: number, point: Point): Tile;\n    getTileBounds(level: number, x: number, y: number, isSource?: boolean): Rect;\n    getTileHeight(level: number): number;\n    getTileUrl(level: number, x: number, y: number): string;\n    getTileWidth(level: number): number;\n    raiseEvent(eventName: string, eventArgs: object): void;\n    removeAllHandlers(eventName: string): void;\n    removeHandler(eventName: string, handler: EventHandler<TileSourceEvent>): void;\n    supports(data: string | object | any[] | Document, url: string): boolean;\n    tileExists(level: number, x: number, y: number): boolean;\n  }\n\n  class TmsTileSource extends TileSource {\n    constructor(\n      width: number,\n      height: number,\n      tileSize: number,\n      tileOverlap: number,\n      tilesUrl: string\n    );\n  }\n\n  interface ImageOptions {\n    index?: number;\n    replace?: boolean;\n    x?: number;\n    y?: number;\n    width?: number;\n    height?: number;\n    fitBounds?: Rect;\n    fitBoundsPlacement?: Placement;\n    clip?: Rect;\n    opacity?: number;\n    preload?: boolean;\n    degrees?: number;\n    compositeOperation?: string;\n    crossOriginPolicy?: string;\n    ajaxWithCredentials?: boolean;\n    loadTilesWithAjax?: boolean;\n    ajaxHeaders?: object;\n    success?: (event: Event) => void;\n    error?: (error: Error) => void;\n    collectionImmediately?: boolean;\n    placeholderFillStyle?: string | CanvasGradient | CanvasPattern;\n  }\n\n  interface TiledImageOptions extends ImageOptions {\n    tileSource: string | object;\n  }\n\n  interface SimpleImageOptions extends ImageOptions {\n    url: string;\n  }\n\n  class Viewer extends ControlDock {\n    canvas: HTMLElement;\n    container: HTMLElement;\n    drawer: Drawer;\n    element: HTMLElement;\n    initialPage: number;\n    navigator: Navigator;\n    viewport: Viewport;\n    world: World;\n    referenceStrip: ReferenceStrip;\n    innerTracker: {\n      scrollHandler: (event: { originalEvent: MouseEvent; scroll: number }) => void;\n    };\n\n    constructor(options: Options);\n    _cancelPendingImages(): void;\n    addHandler(\n      eventName: ViewerEventName,\n      callback: EventHandler<ViewerEvent>,\n      userData?: object\n    ): void;\n    addOnceHandler(\n      eventName: ViewerEventName,\n      callback: EventHandler<ViewerEvent>,\n      userData?: object,\n      times?: number\n    ): void;\n    addOverlay(\n      element: HTMLElement | string | object,\n      location?: Point | Rect,\n      placement?: Placement,\n      onDraw?: (element: HTMLElement, location: Location, placement: Placement) => void\n    ): Viewer;\n    addReferenceStrip(): void;\n    addSimpleImage(options: SimpleImageOptions): void;\n    addTiledImage(options: TiledImageOptions): void;\n    bindSequenceControls(): Viewer;\n    bindStandardControls(): Viewer;\n    clearOverlays(): Viewer;\n    close(): Viewer;\n    currentPage(): number;\n    destroy(): void;\n    forceRedraw(): Viewer;\n    gestureSettingsByDeviceType(type: string): GestureSettings;\n    getHandler(eventName: string): (event: Event) => void;\n    getOverlayById(element: Element | string): Overlay;\n    goToPage(page: number): Viewer;\n    isFullPage(): boolean;\n    isMouseNavEnabled(): boolean;\n    isOpen(): boolean;\n    isVisible(): boolean;\n    open(tileSources: string | object | TileSource[], initialPage?: number): Viewer;\n    raiseEvent(eventName: string, eventArgs?: object): void;\n    removeAllHandlers(eventName: string): void;\n    removeHandler(eventName: string, handler: EventHandler<ViewerEvent>): void;\n    removeOverlay(overlay: Element | string): Viewer;\n    removeReferenceStrip(): void;\n    setControlsEnabled(enabled: boolean): Viewer;\n    setDebugMode(debug: boolean): Viewer;\n    setFullPage(fullScreen: boolean): Viewer;\n    setFullScreen(fullScreen: boolean): Viewer;\n    setMouseNavEnabled(enabled: boolean): Viewer;\n    setVisible(visible: boolean): Viewer;\n    updateOverlay(element: Element | string, location: Point | Rect, placement?: Placement): Viewer;\n  }\n\n  class Viewport {\n    constructor(options: {\n      margins: object;\n      springStiffness?: number;\n      animationTime?: number;\n      minZoomImageRatio?: number;\n      maxZoomPixelRatio?: number;\n      visibilityRatio?: number;\n      wrapHorizontal?: boolean;\n      wrapVertical?: boolean;\n      defaultZoomLevel?: number;\n      minZoomLevel?: number;\n      maxZoomLevel?: number;\n      degrees?: number;\n      homeFillsViewer?: boolean;\n    });\n\n    applyConstraints(immediately?: boolean): Viewport;\n    deltaPixelsFromPoints(deltaPoints: Point, current?: boolean): Point;\n    deltaPixelsFromPointsNoRotate(deltaPoints: Point, current?: boolean): Point;\n    deltaPointsFromPixels(deltaPoints: Point, current?: boolean): Point;\n    deltaPointsFromPixelsNoRotate(deltaPoints: Point, current?: boolean): Point;\n    ensureVisible(immediately?: boolean): Viewport;\n    fitBounds(bounds: Rect, immediately?: boolean): Viewport;\n    fitBoundsWithConstraints(bounds: Rect, immediately?: boolean): Viewport;\n    fitHorizontally(immediately?: boolean): Viewport;\n    fitVertically(immediately?: boolean): Viewport;\n    getAspectRatio(): any; // TODO: determine return type\n    getBounds(current?: boolean): Rect;\n    getBoundsNoRotate(current?: boolean): Rect;\n    getBoundsNoRotateWithMargins(current?: boolean): Rect;\n    getBoundsWithMargins(current?: boolean): Rect;\n    getCenter(current?: boolean): Point;\n    getConstrainedBounds(current?: boolean): Viewport;\n    getContainerSize(): Point;\n    getFlip(): boolean;\n    getHomeBounds(): Rect;\n    getHomeBoundsNoRotate(): Rect;\n    getHomeZoom(): number;\n    getMargins(): object;\n    getMaxZoom(): number;\n    getMinZoom(): number;\n    getRotation(): number;\n    getZoom(current?: boolean): number;\n    goHome(immediately?: boolean): void;\n    imageToViewerElementCoordinates(pixel: Point): Point;\n    imageToViewportCoordinates(position: Point): Point;\n    imageToViewportCoordinates(imageX: number, imageY: number): Point;\n    imageToViewportCoordinates(\n      imageX: number,\n      imageY: number,\n      pixelWidth: number,\n      pixelHeight: number\n    ): Point;\n    imageToViewportRectangle(\n      imageX: number | Rect,\n      imageY?: number,\n      pixelWidth?: number,\n      pixelHeight?: number\n    ): Rect;\n    imageToViewportZoom(imageZoom: number): number;\n    imageToWindowCoordinates(pixel: Point): Point;\n    panBy(delta: Point, immediately?: boolean): Viewport;\n    panTo(center: Point, immediately?: boolean): Viewport;\n    pixelFromPoint(point: Point, current?: boolean): Point;\n    pixelFromPointNoRotate(point: Point, current?: boolean): Point;\n    pointFromPixel(point: Point, current?: boolean): Point;\n    pointFromPixelNoRotate(point: Point, current?: boolean): Point;\n    resetContentSize(contentSize: Point): Viewport;\n    resize(): Viewport;\n    setFlip(state: boolean): Viewport;\n    setMargins(margins: object): void;\n    setRotation(degrees: number): Viewport;\n    toggleFlip(): Viewport;\n    update(): boolean;\n    viewerElementToImageCoordinates(pixel: Point): Point;\n    viewerElementToViewportCoordinates(pixel: Point): Point;\n    viewerElementToViewportRectangle(rectangle: Rect): Rect;\n    viewportToImageCoordinates(position: Point): Point;\n    viewportToImageCoordinates(viewerX: number, viewerY: number): Point;\n    viewportToImageRectangle(rectangle: Rect): Rect;\n    viewportToImageRectangle(\n      viewerX: number,\n      viewerY: number,\n      pointWidth: number,\n      pointHeight: number\n    ): Rect;\n    viewportToImageZoom(viewportZoom: number): number;\n    viewportToViewerElementCoordinates(point: Point): Point;\n    viewportToViewerElementRectangle(rectangle: Rect): Rect;\n    viewportToWindowCoordinates(point: Point): Point;\n    windowToImageCoordinates(pixel: Point): Point;\n    windowToViewportCoordinates(pixel: Point): Point;\n    zoomBy(factor: number, refPoint?: Point, immediately?: boolean): Viewport;\n    zoomTo(factor: number, refPoint?: Point, immediately?: boolean): Viewport;\n  }\n\n  class World extends EventSource {\n    constructor(options: object);\n\n    addHandler(\n      eventName: WorldEventName,\n      callback: EventHandler<WorldEvent>,\n      userData?: object\n    ): void;\n    addItem(item: TiledImage, options?: { index?: number }): void;\n    addOnceHandler(\n      eventName: string,\n      handler: EventHandler<WorldEvent>,\n      userData?: object,\n      times?: number\n    ): void;\n    arrange(options: {\n      immediately?: boolean;\n      layout?: 'horizontal' | 'vertical';\n      rows?: number;\n      columns?: number;\n      tileSize?: number;\n      tileMargin?: number;\n    }): void;\n    draw(): void;\n    getContentFactor(): number;\n    getHandler(eventName: string): (event: Event) => void;\n    getHomeBounds(): Rect;\n    getIndexOfItem(item: TiledImage): number;\n    getItemAt(id: number): TiledImage;\n    getItemCount(): number;\n    needsDraw(): boolean;\n    raiseEvent(eventName: string, eventArgs?: object): void;\n    removeAll(): void;\n    removeAllHandlers(eventName: string): void;\n    removeHandler(eventName: string, handler: EventHandler<WorldEvent>): void;\n    removeItem(item: TiledImage): void;\n    resetItems(): void;\n    setAutoRefigureSizes(value?: boolean): void;\n    setItemIndex(item: TiledImage, index: number): void;\n    update(): void;\n  }\n\n  class ZoomifyTileSource extends TileSource {\n    constructor(width: number, height: number, tileSize: number, tilesUrl: string);\n  }\n\n  // TODO: use proper eventName type aliases, and OSDEvent where appropiate\n\n  type EventHandler<T extends OSDEvent<any>> = (event: T) => void;\n\n  type ButtonEventName = 'blur' | 'click' | 'enter' | 'exit' | 'focus' | 'press' | 'release';\n  type TiledImageEventName =\n    | 'bounds-change'\n    | 'clip-change'\n    | 'composite-operation-change'\n    | 'fully-loaded-change'\n    | 'opacity-change';\n  type TileSourceEventname = 'open-failed' | 'ready';\n  type ViewerEventName =\n    | 'add-item-failed'\n    | 'add-overlay'\n    | 'animation'\n    | 'animation-finish'\n    | 'animation-start'\n    | 'canvas-click'\n    | 'canvas-double-click'\n    | 'canvas-drag'\n    | 'canvas-drag-end'\n    | 'canvas-enter'\n    | 'canvas-exit'\n    | 'canvas-key'\n    | 'canvas-nonprimary-press'\n    | 'canvas-nonprimary-release'\n    | 'canvas-pinch'\n    | 'canvas-press'\n    | 'canvas-release'\n    | 'canvas-scroll'\n    | 'clear-overlay'\n    | 'close'\n    | 'constrain'\n    | 'container-enter'\n    | 'container-exit'\n    | 'controls-enabled'\n    | 'flip'\n    | 'full-page'\n    | 'full-screen'\n    | 'home'\n    | 'mouse-enabled'\n    | 'navigator-click'\n    | 'navigator-drag'\n    | 'navigator-scroll'\n    | 'open'\n    | 'open-failed'\n    | 'page'\n    | 'pan'\n    | 'pre-full-page'\n    | 'pre-full-screen'\n    | 'remove-overlay'\n    | 'reset-size'\n    | 'resize'\n    | 'rotate'\n    | 'tile-drawing'\n    | 'tile-drawn'\n    | 'tile-load-failed'\n    | 'tile-loaded'\n    | 'tile-unloaded'\n    | 'update-level'\n    | 'update-overlay'\n    | 'update-tile'\n    | 'update-viewport'\n    | 'viewport-change'\n    | 'visible'\n    | 'zoom';\n  type WorldEventName = 'add-item' | 'item-index-change' | 'metrics-change' | 'remove-item';\n\n  interface OSDEvent<T> extends Event {\n    eventSource?: T;\n    userData: any;\n  }\n\n  interface ButtonEvent extends OSDEvent<Button> {\n    originalEvent: Event;\n  }\n\n  interface TiledImageEvent extends OSDEvent<TiledImage> {\n    compositeOperationChange?: string;\n    fullyLoaded?: boolean;\n    opacity?: boolean;\n  }\n\n  interface TileSourceEvent extends OSDEvent<TileSource> {\n    message?: string;\n    source?: string;\n    tileSource?: object;\n  }\n\n  interface ViewerEvent extends OSDEvent<Viewer> {\n    message?: string;\n    source?: string;\n    options?: object;\n    element?: Element;\n    location?: Point | Rect;\n    placement?: Placement;\n    tracker?: MouseTracker;\n    position?: Point;\n    quick?: boolean;\n    shift?: boolean;\n    preventDefaultAction?: true;\n    delta?: Point;\n    speed?: number;\n    direction?: number;\n    pointerType?: string;\n    button?: number;\n    buttons?: number;\n    pointers?: number;\n    insideElementPressed?: boolean;\n    buttonDownAny?: boolean;\n    preventVerticalPan?: boolean;\n    preventHorizontalPan?: boolean;\n    gesturePoints?: GesturePoint[];\n    lastCenter?: Point;\n    center?: Point;\n    lastDistance?: number;\n    insideElementReleased?: boolean;\n    scroll?: number;\n    immediately?: number;\n    enabled?: boolean;\n    flipped?: number;\n    fullPage?: boolean;\n    fullScreen?: boolean;\n    page?: number;\n    contentSize?: Point;\n    contentBounds?: Rect;\n    homeBounds?: Rect;\n    contentFactor?: number;\n    newContainerSize?: Point;\n    mantain?: boolean;\n    degrees?: number;\n    tile?: Tile;\n    tiledImage?: TiledImage | XMLHttpRequest;\n    context?: Tile;\n    rendered?: Tile;\n    time?: number;\n    tileRequest?: XMLHttpRequest;\n    getCompletionCallback?: (...args: any) => void;\n    visible?: boolean;\n    refPoint?: Point;\n    zoom?: number;\n  }\n\n  interface WorldEvent extends OSDEvent<World> {\n    item?: TiledImage;\n    previousIndex?: number;\n    newIndex?: number;\n  }\n}\n\n// Custom type needed for importing types data without having to import the actual JS\nexport interface OpenSeadragonType {\n  (options: OpenSeadragon.Options): OpenSeadragon.Viewer;\n  Rect: typeof OpenSeadragon.Rect;\n}\n\nexport type ViewerType = OpenSeadragon.Viewer;\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}