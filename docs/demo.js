(function () {
  'use strict';

  const OpenSeadragon = window.OpenSeadragon;
  class Driftory {
    constructor({
      container,
      prefixUrl
    }) {
      this.container = container;
      this.frameIndex = -1;
      this.frames = [];
      this.viewer = OpenSeadragon({
        element: container,
        prefixUrl: prefixUrl,
        showNavigationControl: false,
        maxZoomPixelRatio: 10
      });
    }

    openComic(comic) {
      this.container.style.backgroundColor = comic.body.backgroundColor;
      this.frames = comic.body.frames;
      comic.body.items.forEach((item, i) => {
        var success;

        if (i === 0) {
          success = () => this.goToFrame(0);
        }

        this.viewer.addTiledImage({
          x: item.x - item.width / 2,
          y: item.y - item.height / 2,
          width: item.width,
          success: success,
          tileSource: {
            type: 'legacy-image-pyramid',
            levels: [{
              url: item.url,
              width: item.width,
              height: item.height
            }]
          }
        });
      });
    }

    goToFrame(index) {
      var frame = this.frames[index];
      var bufferFactor = 0.2;
      var box = new OpenSeadragon.Rect(frame.x - frame.width / 2, frame.y - frame.height / 2, frame.width, frame.height);
      box.width *= 1 + bufferFactor;
      box.height *= 1 + bufferFactor;
      box.x -= frame.width * bufferFactor * 0.5;
      box.y -= frame.height * bufferFactor * 0.5;
      this.viewer.viewport.fitBounds(box);
      this.frameIndex = index;
    }

    getFrameIndex() {
      return this.frameIndex;
    }

    getFrameCount() {
      return this.frames.length;
    }

  }

  var nextButton, previousButton; // ----------

  function init() {
    var driftory = new Driftory({
      container: document.querySelector('.driftory-viewer-container'),
      prefixUrl: 'https://cdn.jsdelivr.net/npm/openseadragon@2.4/build/openseadragon/images/'
    });
    nextButton = document.querySelector('.next-button');
    previousButton = document.querySelector('.previous-button');
    nextButton.addEventListener('click', function () {
      var index = driftory.getFrameIndex();
      index = (index + 1) % driftory.getFrameCount();
      driftory.goToFrame(index);
    });
    previousButton.addEventListener('click', function () {
      var index = driftory.getFrameIndex();
      index = index === 0 ? driftory.getFrameCount() - 1 : index - 1;
      driftory.goToFrame(index);
    });
    fetch('comic.json').then(function (response) {
      if (!response.ok) {
        throw new Error('bad');
      }

      return response.json();
    }).then(function (json) {
      // console.log(json);
      driftory.openComic(json.comic);
    });
  } // ----------
  // Kick it all off!


  init();

}());

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVtby5qcyIsInNvdXJjZXMiOlsic3JjL2xpYnJhcnkvZHJpZnRvcnkuanMiLCJzcmMvZGVtby9kZW1vLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IE9wZW5TZWFkcmFnb24gPSB3aW5kb3cuT3BlblNlYWRyYWdvbjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERyaWZ0b3J5IHtcclxuICBjb25zdHJ1Y3Rvcih7IGNvbnRhaW5lciwgcHJlZml4VXJsIH0pIHtcclxuICAgIHRoaXMuY29udGFpbmVyID0gY29udGFpbmVyO1xyXG4gICAgdGhpcy5mcmFtZUluZGV4ID0gLTE7XHJcbiAgICB0aGlzLmZyYW1lcyA9IFtdO1xyXG5cclxuICAgIHRoaXMudmlld2VyID0gT3BlblNlYWRyYWdvbih7XHJcbiAgICAgIGVsZW1lbnQ6IGNvbnRhaW5lcixcclxuICAgICAgcHJlZml4VXJsOiBwcmVmaXhVcmwsXHJcbiAgICAgIHNob3dOYXZpZ2F0aW9uQ29udHJvbDogZmFsc2UsXHJcbiAgICAgIG1heFpvb21QaXhlbFJhdGlvOiAxMFxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBvcGVuQ29taWMoY29taWMpIHtcclxuICAgIHRoaXMuY29udGFpbmVyLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGNvbWljLmJvZHkuYmFja2dyb3VuZENvbG9yO1xyXG4gICAgdGhpcy5mcmFtZXMgPSBjb21pYy5ib2R5LmZyYW1lcztcclxuXHJcbiAgICBjb21pYy5ib2R5Lml0ZW1zLmZvckVhY2goKGl0ZW0sIGkpID0+IHtcclxuICAgICAgdmFyIHN1Y2Nlc3M7XHJcblxyXG4gICAgICBpZiAoaSA9PT0gMCkge1xyXG4gICAgICAgIHN1Y2Nlc3MgPSAoKSA9PiB0aGlzLmdvVG9GcmFtZSgwKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgdGhpcy52aWV3ZXIuYWRkVGlsZWRJbWFnZSh7XHJcbiAgICAgICAgeDogaXRlbS54IC0gaXRlbS53aWR0aCAvIDIsXHJcbiAgICAgICAgeTogaXRlbS55IC0gaXRlbS5oZWlnaHQgLyAyLFxyXG4gICAgICAgIHdpZHRoOiBpdGVtLndpZHRoLFxyXG4gICAgICAgIHN1Y2Nlc3M6IHN1Y2Nlc3MsXHJcbiAgICAgICAgdGlsZVNvdXJjZToge1xyXG4gICAgICAgICAgdHlwZTogJ2xlZ2FjeS1pbWFnZS1weXJhbWlkJyxcclxuICAgICAgICAgIGxldmVsczogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgdXJsOiBpdGVtLnVybCxcclxuICAgICAgICAgICAgICB3aWR0aDogaXRlbS53aWR0aCxcclxuICAgICAgICAgICAgICBoZWlnaHQ6IGl0ZW0uaGVpZ2h0XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIF1cclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBnb1RvRnJhbWUoaW5kZXgpIHtcclxuICAgIHZhciBmcmFtZSA9IHRoaXMuZnJhbWVzW2luZGV4XTtcclxuICAgIHZhciBidWZmZXJGYWN0b3IgPSAwLjI7XHJcbiAgICB2YXIgYm94ID0gbmV3IE9wZW5TZWFkcmFnb24uUmVjdChcclxuICAgICAgZnJhbWUueCAtIGZyYW1lLndpZHRoIC8gMixcclxuICAgICAgZnJhbWUueSAtIGZyYW1lLmhlaWdodCAvIDIsXHJcbiAgICAgIGZyYW1lLndpZHRoLFxyXG4gICAgICBmcmFtZS5oZWlnaHRcclxuICAgICk7XHJcblxyXG4gICAgYm94LndpZHRoICo9IDEgKyBidWZmZXJGYWN0b3I7XHJcbiAgICBib3guaGVpZ2h0ICo9IDEgKyBidWZmZXJGYWN0b3I7XHJcbiAgICBib3gueCAtPSBmcmFtZS53aWR0aCAqIGJ1ZmZlckZhY3RvciAqIDAuNTtcclxuICAgIGJveC55IC09IGZyYW1lLmhlaWdodCAqIGJ1ZmZlckZhY3RvciAqIDAuNTtcclxuXHJcbiAgICB0aGlzLnZpZXdlci52aWV3cG9ydC5maXRCb3VuZHMoYm94KTtcclxuICAgIHRoaXMuZnJhbWVJbmRleCA9IGluZGV4O1xyXG4gIH1cclxuXHJcbiAgZ2V0RnJhbWVJbmRleCgpIHtcclxuICAgIHJldHVybiB0aGlzLmZyYW1lSW5kZXg7XHJcbiAgfVxyXG5cclxuICBnZXRGcmFtZUNvdW50KCkge1xyXG4gICAgcmV0dXJuIHRoaXMuZnJhbWVzLmxlbmd0aDtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IERyaWZ0b3J5IGZyb20gJy4uL2xpYnJhcnkvZHJpZnRvcnknO1xyXG5cclxudmFyIG5leHRCdXR0b24sIHByZXZpb3VzQnV0dG9uO1xyXG5cclxuLy8gLS0tLS0tLS0tLVxyXG5mdW5jdGlvbiBpbml0KCkge1xyXG4gIHZhciBkcmlmdG9yeSA9IG5ldyBEcmlmdG9yeSh7XHJcbiAgICBjb250YWluZXI6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5kcmlmdG9yeS12aWV3ZXItY29udGFpbmVyJyksXHJcbiAgICBwcmVmaXhVcmw6ICdodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL29wZW5zZWFkcmFnb25AMi40L2J1aWxkL29wZW5zZWFkcmFnb24vaW1hZ2VzLydcclxuICB9KTtcclxuXHJcbiAgbmV4dEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5uZXh0LWJ1dHRvbicpO1xyXG4gIHByZXZpb3VzQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByZXZpb3VzLWJ1dHRvbicpO1xyXG5cclxuICBuZXh0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIGluZGV4ID0gZHJpZnRvcnkuZ2V0RnJhbWVJbmRleCgpO1xyXG4gICAgaW5kZXggPSAoaW5kZXggKyAxKSAlIGRyaWZ0b3J5LmdldEZyYW1lQ291bnQoKTtcclxuICAgIGRyaWZ0b3J5LmdvVG9GcmFtZShpbmRleCk7XHJcbiAgfSk7XHJcblxyXG4gIHByZXZpb3VzQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIGluZGV4ID0gZHJpZnRvcnkuZ2V0RnJhbWVJbmRleCgpO1xyXG4gICAgaW5kZXggPSBpbmRleCA9PT0gMCA/IGRyaWZ0b3J5LmdldEZyYW1lQ291bnQoKSAtIDEgOiBpbmRleCAtIDE7XHJcbiAgICBkcmlmdG9yeS5nb1RvRnJhbWUoaW5kZXgpO1xyXG4gIH0pO1xyXG5cclxuICBmZXRjaCgnY29taWMuanNvbicpXHJcbiAgICAudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignYmFkJyk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XHJcbiAgICB9KVxyXG4gICAgLnRoZW4oZnVuY3Rpb24gKGpzb24pIHtcclxuICAgICAgLy8gY29uc29sZS5sb2coanNvbik7XHJcblxyXG4gICAgICBkcmlmdG9yeS5vcGVuQ29taWMoanNvbi5jb21pYyk7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLy8gLS0tLS0tLS0tLVxyXG4vLyBLaWNrIGl0IGFsbCBvZmYhXHJcbmluaXQoKTtcclxuIl0sIm5hbWVzIjpbIk9wZW5TZWFkcmFnb24iLCJ3aW5kb3ciLCJEcmlmdG9yeSIsImNvbnN0cnVjdG9yIiwiY29udGFpbmVyIiwicHJlZml4VXJsIiwiZnJhbWVJbmRleCIsImZyYW1lcyIsInZpZXdlciIsImVsZW1lbnQiLCJzaG93TmF2aWdhdGlvbkNvbnRyb2wiLCJtYXhab29tUGl4ZWxSYXRpbyIsIm9wZW5Db21pYyIsImNvbWljIiwic3R5bGUiLCJiYWNrZ3JvdW5kQ29sb3IiLCJib2R5IiwiaXRlbXMiLCJmb3JFYWNoIiwiaXRlbSIsImkiLCJzdWNjZXNzIiwiZ29Ub0ZyYW1lIiwiYWRkVGlsZWRJbWFnZSIsIngiLCJ3aWR0aCIsInkiLCJoZWlnaHQiLCJ0aWxlU291cmNlIiwidHlwZSIsImxldmVscyIsInVybCIsImluZGV4IiwiZnJhbWUiLCJidWZmZXJGYWN0b3IiLCJib3giLCJSZWN0Iiwidmlld3BvcnQiLCJmaXRCb3VuZHMiLCJnZXRGcmFtZUluZGV4IiwiZ2V0RnJhbWVDb3VudCIsImxlbmd0aCIsIm5leHRCdXR0b24iLCJwcmV2aW91c0J1dHRvbiIsImluaXQiLCJkcmlmdG9yeSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImFkZEV2ZW50TGlzdGVuZXIiLCJmZXRjaCIsInRoZW4iLCJyZXNwb25zZSIsIm9rIiwiRXJyb3IiLCJqc29uIl0sIm1hcHBpbmdzIjoiOzs7RUFBQSxNQUFNQSxhQUFhLEdBQUdDLE1BQU0sQ0FBQ0QsYUFBN0I7RUFFZSxNQUFNRSxRQUFOLENBQWU7RUFDNUJDLEVBQUFBLFdBQVcsQ0FBQztFQUFFQyxJQUFBQSxTQUFGO0VBQWFDLElBQUFBO0VBQWIsR0FBRCxFQUEyQjtFQUNwQyxTQUFLRCxTQUFMLEdBQWlCQSxTQUFqQjtFQUNBLFNBQUtFLFVBQUwsR0FBa0IsQ0FBQyxDQUFuQjtFQUNBLFNBQUtDLE1BQUwsR0FBYyxFQUFkO0VBRUEsU0FBS0MsTUFBTCxHQUFjUixhQUFhLENBQUM7RUFDMUJTLE1BQUFBLE9BQU8sRUFBRUwsU0FEaUI7RUFFMUJDLE1BQUFBLFNBQVMsRUFBRUEsU0FGZTtFQUcxQkssTUFBQUEscUJBQXFCLEVBQUUsS0FIRztFQUkxQkMsTUFBQUEsaUJBQWlCLEVBQUU7RUFKTyxLQUFELENBQTNCO0VBTUQ7O0VBRURDLEVBQUFBLFNBQVMsQ0FBQ0MsS0FBRCxFQUFRO0VBQ2YsU0FBS1QsU0FBTCxDQUFlVSxLQUFmLENBQXFCQyxlQUFyQixHQUF1Q0YsS0FBSyxDQUFDRyxJQUFOLENBQVdELGVBQWxEO0VBQ0EsU0FBS1IsTUFBTCxHQUFjTSxLQUFLLENBQUNHLElBQU4sQ0FBV1QsTUFBekI7RUFFQU0sSUFBQUEsS0FBSyxDQUFDRyxJQUFOLENBQVdDLEtBQVgsQ0FBaUJDLE9BQWpCLENBQXlCLENBQUNDLElBQUQsRUFBT0MsQ0FBUCxLQUFhO0VBQ3BDLFVBQUlDLE9BQUo7O0VBRUEsVUFBSUQsQ0FBQyxLQUFLLENB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